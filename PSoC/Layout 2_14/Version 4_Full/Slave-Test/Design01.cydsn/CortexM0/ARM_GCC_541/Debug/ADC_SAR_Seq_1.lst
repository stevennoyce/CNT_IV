ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_Seq_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_SAR_Seq_1_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_SAR_Seq_1_Init, %function
  25              	ADC_SAR_Seq_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 2


  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 3


  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 4


 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0E20     		movs	r0, #14
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  41              		.loc 1 173 0
  42 000a 2349     		ldr	r1, .L6
  43 000c 0E20     		movs	r0, #14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 214B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 5


 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 214B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2049     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2049     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 214A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 204A     		ldr	r2, .L6+24
  68 0030 204B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 204A     		ldr	r2, .L6+32
  72 0036 214B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 204A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 204A     		ldr	r2, .L6+44
  80 0042 2149     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2149     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 2149     		ldr	r1, .L6+56
  87 004c 0A68     		ldr	r2, [r1]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0243     		orrs	r2, r0
  91 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 6


 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 4
  93 0056 1F4A     		ldr	r2, .L6+60
  94 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 4
  96 005a 1F4A     		ldr	r2, .L6+64
  97 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 4
  99 005e 0133     		adds	r3, r3, #1
 100 0060 1E4A     		ldr	r2, .L6+68
 101 0062 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 102              		.loc 1 202 0 discriminator 4
 103 0064 0221     		movs	r1, #2
 104 0066 1E4A     		ldr	r2, .L6+72
 105 0068 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 106              		.loc 1 206 0 discriminator 4
 107 006a 1E49     		ldr	r1, .L6+76
 108 006c 0868     		ldr	r0, [r1]
 109              	.LVL2:
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 110              		.loc 1 207 0 discriminator 4
 111 006e 1E4A     		ldr	r2, .L6+80
 112 0070 0240     		ands	r2, r0
 113              	.LVL3:
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 114              		.loc 1 213 0 discriminator 4
 115 0072 1343     		orrs	r3, r2
 116              	.LVL4:
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 7


 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 117              		.loc 1 226 0 discriminator 4
 118 0074 0B60     		str	r3, [r1]
 119              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 120              		.loc 1 232 0 discriminator 4
 121 0076 0023     		movs	r3, #0
 122              	.LVL6:
 123 0078 0BE0     		b	.L3
 124              	.LVL7:
 125              	.L4:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 126              		.loc 1 253 0
 127 007a 9A00     		lsls	r2, r3, #2
 128 007c 1B49     		ldr	r1, .L6+84
 129 007e 5018     		adds	r0, r2, r1
 130 0080 0021     		movs	r1, #0
 131 0082 0160     		str	r1, [r0]
 132              	.LVL8:
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 8


 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 133              		.loc 1 298 0
 134 0084 5C00     		lsls	r4, r3, #1
 135 0086 1A48     		ldr	r0, .L6+88
 136 0088 2152     		strh	r1, [r4, r0]
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 137              		.loc 1 311 0
 138 008a 1A48     		ldr	r0, .L6+92
 139 008c 1A49     		ldr	r1, .L6+96
 140 008e 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 141              		.loc 1 232 0
 142 0090 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 9


 143              	.LVL9:
 144              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 145              		.loc 1 232 0 is_stmt 0 discriminator 1
 146 0092 002B     		cmp	r3, #0
 147 0094 F1D0     		beq	.L4
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 148              		.loc 1 314 0 is_stmt 1
 149              		@ sp needed
 150 0096 10BD     		pop	{r4, pc}
 151              	.L7:
 152              		.align	2
 153              	.L6:
 154 0098 00000000 		.word	ADC_SAR_Seq_1_ISR
 155 009c 20001A40 		.word	1075445792
 156 00a0 80031A40 		.word	1075446656
 157 00a4 40021053 		.word	1393558080
 158 00a8 40020053 		.word	1392509504
 159 00ac 00001A40 		.word	1075445760
 160 00b0 8C000080 		.word	-2147483508
 161 00b4 04001A40 		.word	1075445764
 162 00b8 0000FF07 		.word	134152192
 163 00bc 18001A40 		.word	1075445784
 164 00c0 1C001A40 		.word	1075445788
 165 00c4 02000200 		.word	131074
 166 00c8 10001A40 		.word	1075445776
 167 00cc 14001A40 		.word	1075445780
 168 00d0 00031A40 		.word	1075446528
 169 00d4 28021A40 		.word	1075446312
 170 00d8 38021A40 		.word	1075446328
 171 00dc 18021A40 		.word	1075446296
 172 00e0 000F1A40 		.word	1075449600
 173 00e4 30001A40 		.word	1075445808
 174 00e8 FFFFFFDF 		.word	-536870913
 175 00ec 80001A40 		.word	1075445888
 176 00f0 00000000 		.word	ADC_SAR_Seq_1_offset
 177 00f4 204E0000 		.word	20000
 178 00f8 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 182              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 183              		.align	2
 184              		.global	ADC_SAR_Seq_1_Enable
 185              		.code	16
 186              		.thumb_func
 187              		.type	ADC_SAR_Seq_1_Enable, %function
 188              	ADC_SAR_Seq_1_Enable:
 189              	.LFB2:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 10


 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 190              		.loc 1 331 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 10B5     		push	{r4, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 198              		.loc 1 332 0
 199 0002 074B     		ldr	r3, .L10
 200 0004 1B68     		ldr	r3, [r3]
 201 0006 002B     		cmp	r3, #0
 202 0008 08DB     		blt	.L8
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 203              		.loc 1 342 0
 204 000a 054A     		ldr	r2, .L10
 205 000c 1368     		ldr	r3, [r2]
 206 000e 8021     		movs	r1, #128
 207 0010 0906     		lsls	r1, r1, #24
 208 0012 0B43     		orrs	r3, r1
 209 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 210              		.loc 1 345 0
 211 0016 0A20     		movs	r0, #10
 212 0018 FFF7FEFF 		bl	CyDelayUs
 213              	.LVL10:
 214              	.L8:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 215              		.loc 1 347 0
 216              		@ sp needed
 217 001c 10BD     		pop	{r4, pc}
 218              	.L11:
 219 001e C046     		.align	2
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 11


 220              	.L10:
 221 0020 00001A40 		.word	1075445760
 222              		.cfi_endproc
 223              	.LFE2:
 224              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 225              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 226              		.align	2
 227              		.global	ADC_SAR_Seq_1_Start
 228              		.code	16
 229              		.thumb_func
 230              		.type	ADC_SAR_Seq_1_Start, %function
 231              	ADC_SAR_Seq_1_Start:
 232              	.LFB0:
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 233              		.loc 1 64 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 241              		.loc 1 66 0
 242 0002 064B     		ldr	r3, .L14
 243 0004 1B78     		ldrb	r3, [r3]
 244 0006 002B     		cmp	r3, #0
 245 0008 04D1     		bne	.L13
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 246              		.loc 1 68 0
 247 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 248              	.LVL11:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 249              		.loc 1 69 0
 250 000e 0122     		movs	r2, #1
 251 0010 024B     		ldr	r3, .L14
 252 0012 1A70     		strb	r2, [r3]
 253              	.L13:
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 254              		.loc 1 71 0
 255 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 256              	.LVL12:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 257              		.loc 1 72 0
 258              		@ sp needed
 259 0018 10BD     		pop	{r4, pc}
 260              	.L15:
 261 001a C046     		.align	2
 262              	.L14:
 263 001c 00000000 		.word	.LANCHOR0
 264              		.cfi_endproc
 265              	.LFE0:
 266              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 267              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 268              		.align	2
 269              		.global	ADC_SAR_Seq_1_Stop
 270              		.code	16
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 12


 271              		.thumb_func
 272              		.type	ADC_SAR_Seq_1_Stop, %function
 273              	ADC_SAR_Seq_1_Stop:
 274              	.LFB3:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 275              		.loc 1 366 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 280              		.loc 1 367 0
 281 0000 024A     		ldr	r2, .L17
 282 0002 1368     		ldr	r3, [r2]
 283 0004 5B00     		lsls	r3, r3, #1
 284 0006 5B08     		lsrs	r3, r3, #1
 285 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 286              		.loc 1 368 0
 287              		@ sp needed
 288 000a 7047     		bx	lr
 289              	.L18:
 290              		.align	2
 291              	.L17:
 292 000c 00001A40 		.word	1075445760
 293              		.cfi_endproc
 294              	.LFE3:
 295              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 296              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 297              		.align	2
 298              		.global	ADC_SAR_Seq_1_StartConvert
 299              		.code	16
 300              		.thumb_func
 301              		.type	ADC_SAR_Seq_1_StartConvert, %function
 302              	ADC_SAR_Seq_1_StartConvert:
 303              	.LFB4:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 13


 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 304              		.loc 1 392 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 309              		.loc 1 394 0
 310 0000 034A     		ldr	r2, .L20
 311 0002 1368     		ldr	r3, [r2]
 312 0004 8021     		movs	r1, #128
 313 0006 4902     		lsls	r1, r1, #9
 314 0008 0B43     		orrs	r3, r1
 315 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 316              		.loc 1 399 0
 317              		@ sp needed
 318 000c 7047     		bx	lr
 319              	.L21:
 320 000e C046     		.align	2
 321              	.L20:
 322 0010 04001A40 		.word	1075445764
 323              		.cfi_endproc
 324              	.LFE4:
 325              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 326              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 327              		.align	2
 328              		.global	ADC_SAR_Seq_1_StopConvert
 329              		.code	16
 330              		.thumb_func
 331              		.type	ADC_SAR_Seq_1_StopConvert, %function
 332              	ADC_SAR_Seq_1_StopConvert:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 14


 333              	.LFB5:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 334              		.loc 1 417 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 339              		.loc 1 419 0
 340 0000 024A     		ldr	r2, .L23
 341 0002 1168     		ldr	r1, [r2]
 342 0004 024B     		ldr	r3, .L23+4
 343 0006 0B40     		ands	r3, r1
 344 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 345              		.loc 1 421 0
 346              		@ sp needed
 347 000a 7047     		bx	lr
 348              	.L24:
 349              		.align	2
 350              	.L23:
 351 000c 04001A40 		.word	1075445764
 352 0010 FFFFFEFF 		.word	-65537
 353              		.cfi_endproc
 354              	.LFE5:
 355              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 356              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 357              		.align	2
 358              		.global	ADC_SAR_Seq_1_IsEndConversion
 359              		.code	16
 360              		.thumb_func
 361              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 362              	ADC_SAR_Seq_1_IsEndConversion:
 363              	.LFB6:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 15


 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 364              		.loc 1 451 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369              	.LVL13:
 370 0000 0200     		movs	r2, r0
 371              	.LVL14:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 372              		.loc 1 454 0
 373 0002 8307     		lsls	r3, r0, #30
 374 0004 0CD0     		beq	.L29
 375              	.LVL15:
 376              	.L28:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 377              		.loc 1 458 0 discriminator 2
 378 0006 074B     		ldr	r3, .L30
 379 0008 1B68     		ldr	r3, [r3]
 380 000a 0120     		movs	r0, #1
 381 000c 1840     		ands	r0, r3
 382              	.LVL16:
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 383              		.loc 1 459 0 discriminator 2
 384 000e 01D1     		bne	.L27
 385              		.loc 1 459 0 is_stmt 0 discriminator 1
 386 0010 9307     		lsls	r3, r2, #30
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 16


 387 0012 F8D4     		bmi	.L28
 388              	.L27:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 389              		.loc 1 461 0 is_stmt 1
 390 0014 0028     		cmp	r0, #0
 391 0016 04D0     		beq	.L26
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 392              		.loc 1 464 0
 393 0018 0122     		movs	r2, #1
 394              	.LVL17:
 395 001a 024B     		ldr	r3, .L30
 396 001c 1A60     		str	r2, [r3]
 397 001e 00E0     		b	.L26
 398              	.LVL18:
 399              	.L29:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 400              		.loc 1 452 0
 401 0020 0020     		movs	r0, #0
 402              	.LVL19:
 403              	.L26:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 404              		.loc 1 486 0
 405              		@ sp needed
 406 0022 7047     		bx	lr
 407              	.L31:
 408              		.align	2
 409              	.L30:
 410 0024 10021A40 		.word	1075446288
 411              		.cfi_endproc
 412              	.LFE6:
 413              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 414              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 415              		.align	2
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 17


 416              		.global	ADC_SAR_Seq_1_GetResult16
 417              		.code	16
 418              		.thumb_func
 419              		.type	ADC_SAR_Seq_1_GetResult16, %function
 420              	ADC_SAR_Seq_1_GetResult16:
 421              	.LFB7:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 422              		.loc 1 505 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              	.LVL20:
 427 0000 10B5     		push	{r4, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 4, -8
 430              		.cfi_offset 14, -4
 431 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 432              		.loc 1 509 0
 433 0004 02D0     		beq	.L33
 434              		.loc 1 509 0 is_stmt 0 discriminator 1
 435 0006 0020     		movs	r0, #0
 436              	.LVL21:
 437 0008 FFF7FEFF 		bl	CyHalt
 438              	.LVL22:
 439              	.L33:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 440              		.loc 1 511 0 is_stmt 1
 441 000c 002C     		cmp	r4, #0
 442 000e 07D1     		bne	.L35
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 443              		.loc 1 513 0
 444 0010 A400     		lsls	r4, r4, #2
 445              	.LVL23:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 18


 446 0012 054B     		ldr	r3, .L36
 447 0014 9C46     		mov	ip, r3
 448 0016 6444     		add	r4, r4, ip
 449 0018 2068     		ldr	r0, [r4]
 450 001a 0004     		lsls	r0, r0, #16
 451 001c 000C     		lsrs	r0, r0, #16
 452              	.LVL24:
 453 001e 00E0     		b	.L34
 454              	.LVL25:
 455              	.L35:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 456              		.loc 1 521 0
 457 0020 0020     		movs	r0, #0
 458              	.LVL26:
 459              	.L34:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 460              		.loc 1 525 0
 461 0022 00B2     		sxth	r0, r0
 462              	.LVL27:
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 463              		.loc 1 526 0
 464              		@ sp needed
 465 0024 10BD     		pop	{r4, pc}
 466              	.L37:
 467 0026 C046     		.align	2
 468              	.L36:
 469 0028 80011A40 		.word	1075446144
 470              		.cfi_endproc
 471              	.LFE7:
 472              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 473              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 474              		.align	2
 475              		.global	ADC_SAR_Seq_1_SetChanMask
 476              		.code	16
 477              		.thumb_func
 478              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 479              	ADC_SAR_Seq_1_SetChanMask:
 480              	.LFB8:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 19


 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 481              		.loc 1 550 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL28:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 487              		.loc 1 551 0
 488 0000 0123     		movs	r3, #1
 489 0002 1840     		ands	r0, r3
 490              	.LVL29:
 491 0004 014B     		ldr	r3, .L39
 492 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 493              		.loc 1 552 0
 494              		@ sp needed
 495 0008 7047     		bx	lr
 496              	.L40:
 497 000a C046     		.align	2
 498              	.L39:
 499 000c 20001A40 		.word	1075445792
 500              		.cfi_endproc
 501              	.LFE8:
 502              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 503              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 504              		.align	2
 505              		.global	ADC_SAR_Seq_1_SetLowLimit
 506              		.code	16
 507              		.thumb_func
 508              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 509              	ADC_SAR_Seq_1_SetLowLimit:
 510              	.LFB9:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 20


 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 511              		.loc 1 594 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516              	.LVL30:
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 517              		.loc 1 595 0
 518 0000 054A     		ldr	r2, .L42
 519 0002 1368     		ldr	r3, [r2]
 520 0004 1B0C     		lsrs	r3, r3, #16
 521 0006 1B04     		lsls	r3, r3, #16
 522 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 523              		.loc 1 596 0
 524 000a 1368     		ldr	r3, [r2]
 525 000c 0004     		lsls	r0, r0, #16
 526              	.LVL31:
 527 000e 000C     		lsrs	r0, r0, #16
 528 0010 1843     		orrs	r0, r3
 529 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 530              		.loc 1 597 0
 531              		@ sp needed
 532 0014 7047     		bx	lr
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 21


 533              	.L43:
 534 0016 C046     		.align	2
 535              	.L42:
 536 0018 18001A40 		.word	1075445784
 537              		.cfi_endproc
 538              	.LFE9:
 539              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 540              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 541              		.align	2
 542              		.global	ADC_SAR_Seq_1_SetHighLimit
 543              		.code	16
 544              		.thumb_func
 545              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 546              	ADC_SAR_Seq_1_SetHighLimit:
 547              	.LFB10:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 548              		.loc 1 615 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.LVL32:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 554              		.loc 1 616 0
 555 0000 044A     		ldr	r2, .L45
 556 0002 1368     		ldr	r3, [r2]
 557 0004 1B04     		lsls	r3, r3, #16
 558 0006 1B0C     		lsrs	r3, r3, #16
 559 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 560              		.loc 1 617 0
 561 000a 1368     		ldr	r3, [r2]
 562 000c 0004     		lsls	r0, r0, #16
 563              	.LVL33:
 564 000e 1843     		orrs	r0, r3
 565 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 566              		.loc 1 618 0
 567              		@ sp needed
 568 0012 7047     		bx	lr
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 22


 569              	.L46:
 570              		.align	2
 571              	.L45:
 572 0014 18001A40 		.word	1075445784
 573              		.cfi_endproc
 574              	.LFE10:
 575              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 576              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 577              		.align	2
 578              		.global	ADC_SAR_Seq_1_SetLimitMask
 579              		.code	16
 580              		.thumb_func
 581              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 582              	ADC_SAR_Seq_1_SetLimitMask:
 583              	.LFB11:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 584              		.loc 1 639 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL34:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 590              		.loc 1 640 0
 591 0000 0123     		movs	r3, #1
 592 0002 1840     		ands	r0, r3
 593              	.LVL35:
 594 0004 014B     		ldr	r3, .L48
 595 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 596              		.loc 1 641 0
 597              		@ sp needed
 598 0008 7047     		bx	lr
 599              	.L49:
 600 000a C046     		.align	2
 601              	.L48:
 602 000c 38021A40 		.word	1075446328
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 23


 603              		.cfi_endproc
 604              	.LFE11:
 605              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 606              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 607              		.align	2
 608              		.global	ADC_SAR_Seq_1_SetSatMask
 609              		.code	16
 610              		.thumb_func
 611              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 612              	ADC_SAR_Seq_1_SetSatMask:
 613              	.LFB12:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 614              		.loc 1 662 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL36:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 620              		.loc 1 663 0
 621 0000 0123     		movs	r3, #1
 622 0002 1840     		ands	r0, r3
 623              	.LVL37:
 624 0004 014B     		ldr	r3, .L51
 625 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 626              		.loc 1 664 0
 627              		@ sp needed
 628 0008 7047     		bx	lr
 629              	.L52:
 630 000a C046     		.align	2
 631              	.L51:
 632 000c 28021A40 		.word	1075446312
 633              		.cfi_endproc
 634              	.LFE12:
 635              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 636              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 24


 637              		.align	2
 638              		.global	ADC_SAR_Seq_1_SetOffset
 639              		.code	16
 640              		.thumb_func
 641              		.type	ADC_SAR_Seq_1_SetOffset, %function
 642              	ADC_SAR_Seq_1_SetOffset:
 643              	.LFB13:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 644              		.loc 1 690 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              	.LVL38:
 649 0000 70B5     		push	{r4, r5, r6, lr}
 650              		.cfi_def_cfa_offset 16
 651              		.cfi_offset 4, -16
 652              		.cfi_offset 5, -12
 653              		.cfi_offset 6, -8
 654              		.cfi_offset 14, -4
 655 0002 0400     		movs	r4, r0
 656 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 657              		.loc 1 692 0
 658 0006 0028     		cmp	r0, #0
 659 0008 02D0     		beq	.L54
 660              		.loc 1 692 0 is_stmt 0 discriminator 1
 661 000a 0020     		movs	r0, #0
 662              	.LVL39:
 663 000c FFF7FEFF 		bl	CyHalt
 664              	.LVL40:
 665              	.L54:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 25


 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 666              		.loc 1 694 0 is_stmt 1
 667 0010 6400     		lsls	r4, r4, #1
 668              	.LVL41:
 669 0012 014B     		ldr	r3, .L55
 670 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 671              		.loc 1 695 0
 672              		@ sp needed
 673 0016 70BD     		pop	{r4, r5, r6, pc}
 674              	.L56:
 675              		.align	2
 676              	.L55:
 677 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 678              		.cfi_endproc
 679              	.LFE13:
 680              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 681              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 682              		.align	2
 683              		.global	ADC_SAR_Seq_1_SetGain
 684              		.code	16
 685              		.thumb_func
 686              		.type	ADC_SAR_Seq_1_SetGain, %function
 687              	ADC_SAR_Seq_1_SetGain:
 688              	.LFB14:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 689              		.loc 1 724 0
 690              		.cfi_startproc
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 26


 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL42:
 694 0000 70B5     		push	{r4, r5, r6, lr}
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 4, -16
 697              		.cfi_offset 5, -12
 698              		.cfi_offset 6, -8
 699              		.cfi_offset 14, -4
 700 0002 0400     		movs	r4, r0
 701 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 702              		.loc 1 726 0
 703 0006 0028     		cmp	r0, #0
 704 0008 02D0     		beq	.L58
 705              		.loc 1 726 0 is_stmt 0 discriminator 1
 706 000a 0020     		movs	r0, #0
 707              	.LVL43:
 708 000c FFF7FEFF 		bl	CyHalt
 709              	.LVL44:
 710              	.L58:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 711              		.loc 1 728 0 is_stmt 1
 712 0010 A400     		lsls	r4, r4, #2
 713              	.LVL45:
 714 0012 014B     		ldr	r3, .L59
 715 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 716              		.loc 1 729 0
 717              		@ sp needed
 718              	.LVL46:
 719 0016 70BD     		pop	{r4, r5, r6, pc}
 720              	.L60:
 721              		.align	2
 722              	.L59:
 723 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 724              		.cfi_endproc
 725              	.LFE14:
 726              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 727              		.global	__aeabi_idiv
 728              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 729              		.align	2
 730              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 731              		.code	16
 732              		.thumb_func
 733              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 734              	ADC_SAR_Seq_1_CountsTo_mVolts:
 735              	.LFB15:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 27


 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 736              		.loc 1 757 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              	.LVL47:
 741 0000 70B5     		push	{r4, r5, r6, lr}
 742              		.cfi_def_cfa_offset 16
 743              		.cfi_offset 4, -16
 744              		.cfi_offset 5, -12
 745              		.cfi_offset 6, -8
 746              		.cfi_offset 14, -4
 747 0002 0400     		movs	r4, r0
 748 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 749              		.loc 1 761 0
 750 0006 0028     		cmp	r0, #0
 751 0008 02D0     		beq	.L62
 752              		.loc 1 761 0 is_stmt 0 discriminator 1
 753 000a 0020     		movs	r0, #0
 754              	.LVL48:
 755 000c FFF7FEFF 		bl	CyHalt
 756              	.LVL49:
 757              	.L62:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 28


 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 758              		.loc 1 772 0 is_stmt 1
 759 0010 6300     		lsls	r3, r4, #1
 760 0012 0F4A     		ldr	r2, .L65
 761 0014 995A     		ldrh	r1, [r3, r2]
 762 0016 09B2     		sxth	r1, r1
 763 0018 691A     		subs	r1, r5, r1
 764 001a 09B2     		sxth	r1, r1
 765              	.LVL50:
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 766              		.loc 1 774 0
 767 001c 0D48     		ldr	r0, .L65+4
 768 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 769              		.loc 1 775 0
 770 0020 0029     		cmp	r1, #0
 771 0022 06DD     		ble	.L63
 772              		.loc 1 775 0 is_stmt 0 discriminator 1
 773 0024 A300     		lsls	r3, r4, #2
 774 0026 0C4A     		ldr	r2, .L65+8
 775 0028 9A58     		ldr	r2, [r3, r2]
 776 002a D30F     		lsrs	r3, r2, #31
 777 002c 9A18     		adds	r2, r3, r2
 778 002e 5310     		asrs	r3, r2, #1
 779 0030 06E0     		b	.L64
 780              	.L63:
 781              		.loc 1 775 0 discriminator 2
 782 0032 A300     		lsls	r3, r4, #2
 783 0034 084A     		ldr	r2, .L65+8
 784 0036 9A58     		ldr	r2, [r3, r2]
 785 0038 D30F     		lsrs	r3, r2, #31
 786 003a 9A18     		adds	r2, r3, r2
 787 003c 5210     		asrs	r2, r2, #1
 788 003e 5342     		rsbs	r3, r2, #0
 789              	.L64:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 790              		.loc 1 774 0 is_stmt 1
 791 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 792              		.loc 1 776 0
 793 0042 A400     		lsls	r4, r4, #2
 794              	.LVL51:
 795 0044 044B     		ldr	r3, .L65+8
 796 0046 E158     		ldr	r1, [r4, r3]
 797              	.LVL52:
 798 0048 FFF7FEFF 		bl	__aeabi_idiv
 799              	.LVL53:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 800              		.loc 1 774 0
 801 004c 00B2     		sxth	r0, r0
 802              	.LVL54:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 803              		.loc 1 779 0
 804              		@ sp needed
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 29


 805 004e 70BD     		pop	{r4, r5, r6, pc}
 806              	.L66:
 807              		.align	2
 808              	.L65:
 809 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 810 0054 10270000 		.word	10000
 811 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 812              		.cfi_endproc
 813              	.LFE15:
 814              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 815              		.global	__aeabi_lmul
 816              		.global	__aeabi_ldivmod
 817              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 818              		.align	2
 819              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 820              		.code	16
 821              		.thumb_func
 822              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 823              	ADC_SAR_Seq_1_CountsTo_uVolts:
 824              	.LFB16:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 825              		.loc 1 811 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              	.LVL55:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 30


 830 0000 70B5     		push	{r4, r5, r6, lr}
 831              		.cfi_def_cfa_offset 16
 832              		.cfi_offset 4, -16
 833              		.cfi_offset 5, -12
 834              		.cfi_offset 6, -8
 835              		.cfi_offset 14, -4
 836 0002 0500     		movs	r5, r0
 837 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 838              		.loc 1 815 0
 839 0006 0028     		cmp	r0, #0
 840 0008 02D0     		beq	.L68
 841              		.loc 1 815 0 is_stmt 0 discriminator 1
 842 000a 0020     		movs	r0, #0
 843              	.LVL56:
 844 000c FFF7FEFF 		bl	CyHalt
 845              	.LVL57:
 846              	.L68:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 847              		.loc 1 826 0 is_stmt 1
 848 0010 6A00     		lsls	r2, r5, #1
 849 0012 084B     		ldr	r3, .L69
 850 0014 D05A     		ldrh	r0, [r2, r3]
 851 0016 00B2     		sxth	r0, r0
 852 0018 201A     		subs	r0, r4, r0
 853 001a 00B2     		sxth	r0, r0
 854              	.LVL58:
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 855              		.loc 1 828 0
 856 001c C117     		asrs	r1, r0, #31
 857 001e 064A     		ldr	r2, .L69+4
 858 0020 0023     		movs	r3, #0
 859 0022 FFF7FEFF 		bl	__aeabi_lmul
 860              	.LVL59:
 861 0026 AD00     		lsls	r5, r5, #2
 862              	.LVL60:
 863 0028 044B     		ldr	r3, .L69+8
 864 002a EA58     		ldr	r2, [r5, r3]
 865 002c D317     		asrs	r3, r2, #31
 866 002e FFF7FEFF 		bl	__aeabi_ldivmod
 867              	.LVL61:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 31


 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 868              		.loc 1 831 0
 869              		@ sp needed
 870 0032 70BD     		pop	{r4, r5, r6, pc}
 871              	.L70:
 872              		.align	2
 873              	.L69:
 874 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 875 0038 80969800 		.word	10000000
 876 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 877              		.cfi_endproc
 878              	.LFE16:
 879              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 880              		.global	__aeabi_i2f
 881              		.global	__aeabi_fmul
 882              		.global	__aeabi_fdiv
 883              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 884              		.align	2
 885              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 886              		.code	16
 887              		.thumb_func
 888              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 889              	ADC_SAR_Seq_1_CountsTo_Volts:
 890              	.LFB17:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 891              		.loc 1 856 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL62:
 896 0000 70B5     		push	{r4, r5, r6, lr}
 897              		.cfi_def_cfa_offset 16
 898              		.cfi_offset 4, -16
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 32


 899              		.cfi_offset 5, -12
 900              		.cfi_offset 6, -8
 901              		.cfi_offset 14, -4
 902 0002 0400     		movs	r4, r0
 903 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 904              		.loc 1 860 0
 905 0006 0028     		cmp	r0, #0
 906 0008 02D0     		beq	.L72
 907              		.loc 1 860 0 is_stmt 0 discriminator 1
 908 000a 0020     		movs	r0, #0
 909              	.LVL63:
 910 000c FFF7FEFF 		bl	CyHalt
 911              	.LVL64:
 912              	.L72:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 913              		.loc 1 871 0 is_stmt 1
 914 0010 6200     		lsls	r2, r4, #1
 915 0012 0A4B     		ldr	r3, .L73
 916 0014 D05A     		ldrh	r0, [r2, r3]
 917 0016 00B2     		sxth	r0, r0
 918 0018 281A     		subs	r0, r5, r0
 919 001a 00B2     		sxth	r0, r0
 920              	.LVL65:
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 921              		.loc 1 873 0
 922 001c FFF7FEFF 		bl	__aeabi_i2f
 923              	.LVL66:
 924 0020 0749     		ldr	r1, .L73+4
 925 0022 FFF7FEFF 		bl	__aeabi_fmul
 926              	.LVL67:
 927 0026 051C     		adds	r5, r0, #0
 928 0028 A400     		lsls	r4, r4, #2
 929              	.LVL68:
 930 002a 064B     		ldr	r3, .L73+8
 931 002c E058     		ldr	r0, [r4, r3]
 932 002e FFF7FEFF 		bl	__aeabi_i2f
 933              	.LVL69:
 934 0032 011C     		adds	r1, r0, #0
 935 0034 281C     		adds	r0, r5, #0
 936 0036 FFF7FEFF 		bl	__aeabi_fdiv
 937              	.LVL70:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 33


 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 938              		.loc 1 876 0
 939              		@ sp needed
 940 003a 70BD     		pop	{r4, r5, r6, pc}
 941              	.L74:
 942              		.align	2
 943              	.L73:
 944 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 945 0040 00002041 		.word	1092616192
 946 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 947              		.cfi_endproc
 948              	.LFE17:
 949              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 950              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 951              		.comm	ADC_SAR_Seq_1_offset,2,4
 952              		.global	ADC_SAR_Seq_1_initVar
 953              		.bss
 954              		.set	.LANCHOR0,. + 0
 955              		.type	ADC_SAR_Seq_1_initVar, %object
 956              		.size	ADC_SAR_Seq_1_initVar, 1
 957              	ADC_SAR_Seq_1_initVar:
 958 0000 00       		.space	1
 959              		.text
 960              	.Letext0:
 961              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 962              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 963              		.section	.debug_info,"",%progbits
 964              	.Ldebug_info0:
 965 0000 75050000 		.4byte	0x575
 966 0004 0400     		.2byte	0x4
 967 0006 00000000 		.4byte	.Ldebug_abbrev0
 968 000a 04       		.byte	0x4
 969 000b 01       		.uleb128 0x1
 970 000c 72000000 		.4byte	.LASF63
 971 0010 0C       		.byte	0xc
 972 0011 5C030000 		.4byte	.LASF64
 973 0015 BC010000 		.4byte	.LASF65
 974 0019 00000000 		.4byte	.Ldebug_ranges0+0
 975 001d 00000000 		.4byte	0
 976 0021 00000000 		.4byte	.Ldebug_line0
 977 0025 02       		.uleb128 0x2
 978 0026 01       		.byte	0x1
 979 0027 06       		.byte	0x6
 980 0028 68010000 		.4byte	.LASF0
 981 002c 02       		.uleb128 0x2
 982 002d 01       		.byte	0x1
 983 002e 08       		.byte	0x8
 984 002f C3030000 		.4byte	.LASF1
 985 0033 02       		.uleb128 0x2
 986 0034 02       		.byte	0x2
 987 0035 05       		.byte	0x5
 988 0036 D1030000 		.4byte	.LASF2
 989 003a 02       		.uleb128 0x2
 990 003b 02       		.byte	0x2
 991 003c 07       		.byte	0x7
 992 003d 9B020000 		.4byte	.LASF3
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 34


 993 0041 02       		.uleb128 0x2
 994 0042 04       		.byte	0x4
 995 0043 05       		.byte	0x5
 996 0044 B3010000 		.4byte	.LASF4
 997 0048 02       		.uleb128 0x2
 998 0049 04       		.byte	0x4
 999 004a 07       		.byte	0x7
 1000 004b 79020000 		.4byte	.LASF5
 1001 004f 02       		.uleb128 0x2
 1002 0050 08       		.byte	0x8
 1003 0051 05       		.byte	0x5
 1004 0052 5A010000 		.4byte	.LASF6
 1005 0056 02       		.uleb128 0x2
 1006 0057 08       		.byte	0x8
 1007 0058 07       		.byte	0x7
 1008 0059 14010000 		.4byte	.LASF7
 1009 005d 03       		.uleb128 0x3
 1010 005e 04       		.byte	0x4
 1011 005f 05       		.byte	0x5
 1012 0060 696E7400 		.ascii	"int\000"
 1013 0064 02       		.uleb128 0x2
 1014 0065 04       		.byte	0x4
 1015 0066 07       		.byte	0x7
 1016 0067 65020000 		.4byte	.LASF8
 1017 006b 04       		.uleb128 0x4
 1018 006c 06020000 		.4byte	.LASF9
 1019 0070 02       		.byte	0x2
 1020 0071 D201     		.2byte	0x1d2
 1021 0073 2C000000 		.4byte	0x2c
 1022 0077 04       		.uleb128 0x4
 1023 0078 15000000 		.4byte	.LASF10
 1024 007c 02       		.byte	0x2
 1025 007d D301     		.2byte	0x1d3
 1026 007f 3A000000 		.4byte	0x3a
 1027 0083 04       		.uleb128 0x4
 1028 0084 1D020000 		.4byte	.LASF11
 1029 0088 02       		.byte	0x2
 1030 0089 D401     		.2byte	0x1d4
 1031 008b 48000000 		.4byte	0x48
 1032 008f 04       		.uleb128 0x4
 1033 0090 8A040000 		.4byte	.LASF12
 1034 0094 02       		.byte	0x2
 1035 0095 D601     		.2byte	0x1d6
 1036 0097 33000000 		.4byte	0x33
 1037 009b 04       		.uleb128 0x4
 1038 009c 8F010000 		.4byte	.LASF13
 1039 00a0 02       		.byte	0x2
 1040 00a1 D701     		.2byte	0x1d7
 1041 00a3 41000000 		.4byte	0x41
 1042 00a7 04       		.uleb128 0x4
 1043 00a8 E7020000 		.4byte	.LASF14
 1044 00ac 02       		.byte	0x2
 1045 00ad D801     		.2byte	0x1d8
 1046 00af B3000000 		.4byte	0xb3
 1047 00b3 02       		.uleb128 0x2
 1048 00b4 04       		.byte	0x4
 1049 00b5 04       		.byte	0x4
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 35


 1050 00b6 83030000 		.4byte	.LASF15
 1051 00ba 02       		.uleb128 0x2
 1052 00bb 08       		.byte	0x8
 1053 00bc 04       		.byte	0x4
 1054 00bd 16020000 		.4byte	.LASF16
 1055 00c1 04       		.uleb128 0x4
 1056 00c2 45030000 		.4byte	.LASF17
 1057 00c6 02       		.byte	0x2
 1058 00c7 DD01     		.2byte	0x1dd
 1059 00c9 4F000000 		.4byte	0x4f
 1060 00cd 02       		.uleb128 0x2
 1061 00ce 01       		.byte	0x1
 1062 00cf 08       		.byte	0x8
 1063 00d0 1D040000 		.4byte	.LASF18
 1064 00d4 04       		.uleb128 0x4
 1065 00d5 E1020000 		.4byte	.LASF19
 1066 00d9 02       		.byte	0x2
 1067 00da 7E02     		.2byte	0x27e
 1068 00dc E0000000 		.4byte	0xe0
 1069 00e0 05       		.uleb128 0x5
 1070 00e1 83000000 		.4byte	0x83
 1071 00e5 02       		.uleb128 0x2
 1072 00e6 08       		.byte	0x8
 1073 00e7 04       		.byte	0x4
 1074 00e8 01030000 		.4byte	.LASF20
 1075 00ec 02       		.uleb128 0x2
 1076 00ed 04       		.byte	0x4
 1077 00ee 07       		.byte	0x7
 1078 00ef EF020000 		.4byte	.LASF21
 1079 00f3 06       		.uleb128 0x6
 1080 00f4 1C000000 		.4byte	.LASF25
 1081 00f8 01       		.byte	0x1
 1082 00f9 5E       		.byte	0x5e
 1083 00fa 00000000 		.4byte	.LFB1
 1084 00fe FC000000 		.4byte	.LFE1-.LFB1
 1085 0102 01       		.uleb128 0x1
 1086 0103 9C       		.byte	0x9c
 1087 0104 5D010000 		.4byte	0x15d
 1088 0108 07       		.uleb128 0x7
 1089 0109 12040000 		.4byte	.LASF22
 1090 010d 01       		.byte	0x1
 1091 010e 60       		.byte	0x60
 1092 010f 83000000 		.4byte	0x83
 1093 0113 00000000 		.4byte	.LLST0
 1094 0117 07       		.uleb128 0x7
 1095 0118 91020000 		.4byte	.LASF23
 1096 011c 01       		.byte	0x1
 1097 011d 61       		.byte	0x61
 1098 011e 83000000 		.4byte	0x83
 1099 0122 1F000000 		.4byte	.LLST1
 1100 0126 07       		.uleb128 0x7
 1101 0127 37000000 		.4byte	.LASF24
 1102 012b 01       		.byte	0x1
 1103 012c 62       		.byte	0x62
 1104 012d 9B000000 		.4byte	0x9b
 1105 0131 60000000 		.4byte	.LLST2
 1106 0135 08       		.uleb128 0x8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 36


 1107 0136 0A000000 		.4byte	.LVL0
 1108 013a 4C050000 		.4byte	0x54c
 1109 013e 4D010000 		.4byte	0x14d
 1110 0142 09       		.uleb128 0x9
 1111 0143 01       		.uleb128 0x1
 1112 0144 50       		.byte	0x50
 1113 0145 01       		.uleb128 0x1
 1114 0146 3E       		.byte	0x3e
 1115 0147 09       		.uleb128 0x9
 1116 0148 01       		.uleb128 0x1
 1117 0149 51       		.byte	0x51
 1118 014a 01       		.uleb128 0x1
 1119 014b 33       		.byte	0x33
 1120 014c 00       		.byte	0
 1121 014d 0A       		.uleb128 0xa
 1122 014e 12000000 		.4byte	.LVL1
 1123 0152 57050000 		.4byte	0x557
 1124 0156 09       		.uleb128 0x9
 1125 0157 01       		.uleb128 0x1
 1126 0158 50       		.byte	0x50
 1127 0159 01       		.uleb128 0x1
 1128 015a 3E       		.byte	0x3e
 1129 015b 00       		.byte	0
 1130 015c 00       		.byte	0
 1131 015d 0B       		.uleb128 0xb
 1132 015e 2B010000 		.4byte	.LASF26
 1133 0162 01       		.byte	0x1
 1134 0163 4A01     		.2byte	0x14a
 1135 0165 00000000 		.4byte	.LFB2
 1136 0169 24000000 		.4byte	.LFE2-.LFB2
 1137 016d 01       		.uleb128 0x1
 1138 016e 9C       		.byte	0x9c
 1139 016f 83010000 		.4byte	0x183
 1140 0173 0A       		.uleb128 0xa
 1141 0174 1C000000 		.4byte	.LVL10
 1142 0178 62050000 		.4byte	0x562
 1143 017c 09       		.uleb128 0x9
 1144 017d 01       		.uleb128 0x1
 1145 017e 50       		.byte	0x50
 1146 017f 01       		.uleb128 0x1
 1147 0180 3A       		.byte	0x3a
 1148 0181 00       		.byte	0
 1149 0182 00       		.byte	0
 1150 0183 06       		.uleb128 0x6
 1151 0184 00010000 		.4byte	.LASF27
 1152 0188 01       		.byte	0x1
 1153 0189 3F       		.byte	0x3f
 1154 018a 00000000 		.4byte	.LFB0
 1155 018e 20000000 		.4byte	.LFE0-.LFB0
 1156 0192 01       		.uleb128 0x1
 1157 0193 9C       		.byte	0x9c
 1158 0194 AB010000 		.4byte	0x1ab
 1159 0198 0C       		.uleb128 0xc
 1160 0199 0E000000 		.4byte	.LVL11
 1161 019d F3000000 		.4byte	0xf3
 1162 01a1 0C       		.uleb128 0xc
 1163 01a2 18000000 		.4byte	.LVL12
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 37


 1164 01a6 5D010000 		.4byte	0x15d
 1165 01aa 00       		.byte	0
 1166 01ab 0D       		.uleb128 0xd
 1167 01ac 9F030000 		.4byte	.LASF28
 1168 01b0 01       		.byte	0x1
 1169 01b1 6D01     		.2byte	0x16d
 1170 01b3 00000000 		.4byte	.LFB3
 1171 01b7 10000000 		.4byte	.LFE3-.LFB3
 1172 01bb 01       		.uleb128 0x1
 1173 01bc 9C       		.byte	0x9c
 1174 01bd 0D       		.uleb128 0xd
 1175 01be 3E000000 		.4byte	.LASF29
 1176 01c2 01       		.byte	0x1
 1177 01c3 8701     		.2byte	0x187
 1178 01c5 00000000 		.4byte	.LFB4
 1179 01c9 14000000 		.4byte	.LFE4-.LFB4
 1180 01cd 01       		.uleb128 0x1
 1181 01ce 9C       		.byte	0x9c
 1182 01cf 0D       		.uleb128 0xd
 1183 01d0 2B030000 		.4byte	.LASF30
 1184 01d4 01       		.byte	0x1
 1185 01d5 A001     		.2byte	0x1a0
 1186 01d7 00000000 		.4byte	.LFB5
 1187 01db 14000000 		.4byte	.LFE5-.LFB5
 1188 01df 01       		.uleb128 0x1
 1189 01e0 9C       		.byte	0x9c
 1190 01e1 0E       		.uleb128 0xe
 1191 01e2 0D030000 		.4byte	.LASF32
 1192 01e6 01       		.byte	0x1
 1193 01e7 C201     		.2byte	0x1c2
 1194 01e9 83000000 		.4byte	0x83
 1195 01ed 00000000 		.4byte	.LFB6
 1196 01f1 28000000 		.4byte	.LFE6-.LFB6
 1197 01f5 01       		.uleb128 0x1
 1198 01f6 9C       		.byte	0x9c
 1199 01f7 1C020000 		.4byte	0x21c
 1200 01fb 0F       		.uleb128 0xf
 1201 01fc 47020000 		.4byte	.LASF34
 1202 0200 01       		.byte	0x1
 1203 0201 C201     		.2byte	0x1c2
 1204 0203 83000000 		.4byte	0x83
 1205 0207 76000000 		.4byte	.LLST3
 1206 020b 10       		.uleb128 0x10
 1207 020c 6B040000 		.4byte	.LASF31
 1208 0210 01       		.byte	0x1
 1209 0211 C401     		.2byte	0x1c4
 1210 0213 83000000 		.4byte	0x83
 1211 0217 BB000000 		.4byte	.LLST4
 1212 021b 00       		.byte	0
 1213 021c 0E       		.uleb128 0xe
 1214 021d 40010000 		.4byte	.LASF33
 1215 0221 01       		.byte	0x1
 1216 0222 F801     		.2byte	0x1f8
 1217 0224 8F000000 		.4byte	0x8f
 1218 0228 00000000 		.4byte	.LFB7
 1219 022c 2C000000 		.4byte	.LFE7-.LFB7
 1220 0230 01       		.uleb128 0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 38


 1221 0231 9C       		.byte	0x9c
 1222 0232 66020000 		.4byte	0x266
 1223 0236 0F       		.uleb128 0xf
 1224 0237 18040000 		.4byte	.LASF35
 1225 023b 01       		.byte	0x1
 1226 023c F801     		.2byte	0x1f8
 1227 023e 83000000 		.4byte	0x83
 1228 0242 F1000000 		.4byte	.LLST5
 1229 0246 10       		.uleb128 0x10
 1230 0247 AB040000 		.4byte	.LASF36
 1231 024b 01       		.byte	0x1
 1232 024c FA01     		.2byte	0x1fa
 1233 024e 83000000 		.4byte	0x83
 1234 0252 36010000 		.4byte	.LLST6
 1235 0256 0A       		.uleb128 0xa
 1236 0257 0C000000 		.4byte	.LVL22
 1237 025b 6D050000 		.4byte	0x56d
 1238 025f 09       		.uleb128 0x9
 1239 0260 01       		.uleb128 0x1
 1240 0261 50       		.byte	0x50
 1241 0262 01       		.uleb128 0x1
 1242 0263 30       		.byte	0x30
 1243 0264 00       		.byte	0
 1244 0265 00       		.byte	0
 1245 0266 0B       		.uleb128 0xb
 1246 0267 F8030000 		.4byte	.LASF37
 1247 026b 01       		.byte	0x1
 1248 026c 2502     		.2byte	0x225
 1249 026e 00000000 		.4byte	.LFB8
 1250 0272 10000000 		.4byte	.LFE8-.LFB8
 1251 0276 01       		.uleb128 0x1
 1252 0277 9C       		.byte	0x9c
 1253 0278 8D020000 		.4byte	0x28d
 1254 027c 0F       		.uleb128 0xf
 1255 027d 24020000 		.4byte	.LASF38
 1256 0281 01       		.byte	0x1
 1257 0282 2502     		.2byte	0x225
 1258 0284 83000000 		.4byte	0x83
 1259 0288 54010000 		.4byte	.LLST7
 1260 028c 00       		.byte	0
 1261 028d 0B       		.uleb128 0xb
 1262 028e 22040000 		.4byte	.LASF39
 1263 0292 01       		.byte	0x1
 1264 0293 5102     		.2byte	0x251
 1265 0295 00000000 		.4byte	.LFB9
 1266 0299 1C000000 		.4byte	.LFE9-.LFB9
 1267 029d 01       		.uleb128 0x1
 1268 029e 9C       		.byte	0x9c
 1269 029f B4020000 		.4byte	0x2b4
 1270 02a3 0F       		.uleb128 0xf
 1271 02a4 F8020000 		.4byte	.LASF40
 1272 02a8 01       		.byte	0x1
 1273 02a9 5102     		.2byte	0x251
 1274 02ab 83000000 		.4byte	0x83
 1275 02af 75010000 		.4byte	.LLST8
 1276 02b3 00       		.byte	0
 1277 02b4 0B       		.uleb128 0xb
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 39


 1278 02b5 74010000 		.4byte	.LASF41
 1279 02b9 01       		.byte	0x1
 1280 02ba 6602     		.2byte	0x266
 1281 02bc 00000000 		.4byte	.LFB10
 1282 02c0 18000000 		.4byte	.LFE10-.LFB10
 1283 02c4 01       		.uleb128 0x1
 1284 02c5 9C       		.byte	0x9c
 1285 02c6 DB020000 		.4byte	0x2db
 1286 02ca 0F       		.uleb128 0xf
 1287 02cb B2030000 		.4byte	.LASF42
 1288 02cf 01       		.byte	0x1
 1289 02d0 6602     		.2byte	0x266
 1290 02d2 83000000 		.4byte	0x83
 1291 02d6 96010000 		.4byte	.LLST9
 1292 02da 00       		.byte	0
 1293 02db 0B       		.uleb128 0xb
 1294 02dc 90040000 		.4byte	.LASF43
 1295 02e0 01       		.byte	0x1
 1296 02e1 7E02     		.2byte	0x27e
 1297 02e3 00000000 		.4byte	.LFB11
 1298 02e7 10000000 		.4byte	.LFE11-.LFB11
 1299 02eb 01       		.uleb128 0x1
 1300 02ec 9C       		.byte	0x9c
 1301 02ed 02030000 		.4byte	0x302
 1302 02f1 0F       		.uleb128 0xf
 1303 02f2 24020000 		.4byte	.LASF38
 1304 02f6 01       		.byte	0x1
 1305 02f7 7E02     		.2byte	0x27e
 1306 02f9 83000000 		.4byte	0x83
 1307 02fd B7010000 		.4byte	.LLST10
 1308 0301 00       		.byte	0
 1309 0302 0B       		.uleb128 0xb
 1310 0303 59000000 		.4byte	.LASF44
 1311 0307 01       		.byte	0x1
 1312 0308 9502     		.2byte	0x295
 1313 030a 00000000 		.4byte	.LFB12
 1314 030e 10000000 		.4byte	.LFE12-.LFB12
 1315 0312 01       		.uleb128 0x1
 1316 0313 9C       		.byte	0x9c
 1317 0314 29030000 		.4byte	0x329
 1318 0318 0F       		.uleb128 0xf
 1319 0319 24020000 		.4byte	.LASF38
 1320 031d 01       		.byte	0x1
 1321 031e 9502     		.2byte	0x295
 1322 0320 83000000 		.4byte	0x83
 1323 0324 D8010000 		.4byte	.LLST11
 1324 0328 00       		.byte	0
 1325 0329 0B       		.uleb128 0xb
 1326 032a 72040000 		.4byte	.LASF45
 1327 032e 01       		.byte	0x1
 1328 032f B102     		.2byte	0x2b1
 1329 0331 00000000 		.4byte	.LFB13
 1330 0335 1C000000 		.4byte	.LFE13-.LFB13
 1331 0339 01       		.uleb128 0x1
 1332 033a 9C       		.byte	0x9c
 1333 033b 6F030000 		.4byte	0x36f
 1334 033f 0F       		.uleb128 0xf
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 40


 1335 0340 18040000 		.4byte	.LASF35
 1336 0344 01       		.byte	0x1
 1337 0345 B102     		.2byte	0x2b1
 1338 0347 83000000 		.4byte	0x83
 1339 034b F9010000 		.4byte	.LLST12
 1340 034f 0F       		.uleb128 0xf
 1341 0350 3C040000 		.4byte	.LASF46
 1342 0354 01       		.byte	0x1
 1343 0355 B102     		.2byte	0x2b1
 1344 0357 8F000000 		.4byte	0x8f
 1345 035b 25020000 		.4byte	.LLST13
 1346 035f 0A       		.uleb128 0xa
 1347 0360 10000000 		.4byte	.LVL40
 1348 0364 6D050000 		.4byte	0x56d
 1349 0368 09       		.uleb128 0x9
 1350 0369 01       		.uleb128 0x1
 1351 036a 50       		.byte	0x50
 1352 036b 01       		.uleb128 0x1
 1353 036c 30       		.byte	0x30
 1354 036d 00       		.byte	0
 1355 036e 00       		.byte	0
 1356 036f 0B       		.uleb128 0xb
 1357 0370 89030000 		.4byte	.LASF47
 1358 0374 01       		.byte	0x1
 1359 0375 D302     		.2byte	0x2d3
 1360 0377 00000000 		.4byte	.LFB14
 1361 037b 1C000000 		.4byte	.LFE14-.LFB14
 1362 037f 01       		.uleb128 0x1
 1363 0380 9C       		.byte	0x9c
 1364 0381 B5030000 		.4byte	0x3b5
 1365 0385 0F       		.uleb128 0xf
 1366 0386 18040000 		.4byte	.LASF35
 1367 038a 01       		.byte	0x1
 1368 038b D302     		.2byte	0x2d3
 1369 038d 83000000 		.4byte	0x83
 1370 0391 46020000 		.4byte	.LLST14
 1371 0395 0F       		.uleb128 0xf
 1372 0396 2F000000 		.4byte	.LASF48
 1373 039a 01       		.byte	0x1
 1374 039b D302     		.2byte	0x2d3
 1375 039d 9B000000 		.4byte	0x9b
 1376 03a1 72020000 		.4byte	.LLST15
 1377 03a5 0A       		.uleb128 0xa
 1378 03a6 10000000 		.4byte	.LVL44
 1379 03aa 6D050000 		.4byte	0x56d
 1380 03ae 09       		.uleb128 0x9
 1381 03af 01       		.uleb128 0x1
 1382 03b0 50       		.byte	0x50
 1383 03b1 01       		.uleb128 0x1
 1384 03b2 30       		.byte	0x30
 1385 03b3 00       		.byte	0
 1386 03b4 00       		.byte	0
 1387 03b5 11       		.uleb128 0x11
 1388 03b6 29020000 		.4byte	.LASF49
 1389 03ba 01       		.byte	0x1
 1390 03bb F402     		.2byte	0x2f4
 1391 03bd 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 41


 1392 03c1 00000000 		.4byte	.LFB15
 1393 03c5 5C000000 		.4byte	.LFE15-.LFB15
 1394 03c9 01       		.uleb128 0x1
 1395 03ca 9C       		.byte	0x9c
 1396 03cb 0D040000 		.4byte	0x40d
 1397 03cf 0F       		.uleb128 0xf
 1398 03d0 18040000 		.4byte	.LASF35
 1399 03d4 01       		.byte	0x1
 1400 03d5 F402     		.2byte	0x2f4
 1401 03d7 83000000 		.4byte	0x83
 1402 03db A2020000 		.4byte	.LLST16
 1403 03df 0F       		.uleb128 0xf
 1404 03e0 43040000 		.4byte	.LASF50
 1405 03e4 01       		.byte	0x1
 1406 03e5 F402     		.2byte	0x2f4
 1407 03e7 8F000000 		.4byte	0x8f
 1408 03eb CE020000 		.4byte	.LLST17
 1409 03ef 12       		.uleb128 0x12
 1410 03f0 DA020000 		.4byte	.LASF51
 1411 03f4 01       		.byte	0x1
 1412 03f5 F602     		.2byte	0x2f6
 1413 03f7 8F000000 		.4byte	0x8f
 1414 03fb 01       		.uleb128 0x1
 1415 03fc 50       		.byte	0x50
 1416 03fd 0A       		.uleb128 0xa
 1417 03fe 10000000 		.4byte	.LVL49
 1418 0402 6D050000 		.4byte	0x56d
 1419 0406 09       		.uleb128 0x9
 1420 0407 01       		.uleb128 0x1
 1421 0408 50       		.byte	0x50
 1422 0409 01       		.uleb128 0x1
 1423 040a 30       		.byte	0x30
 1424 040b 00       		.byte	0
 1425 040c 00       		.byte	0
 1426 040d 11       		.uleb128 0x11
 1427 040e 95010000 		.4byte	.LASF52
 1428 0412 01       		.byte	0x1
 1429 0413 2A03     		.2byte	0x32a
 1430 0415 9B000000 		.4byte	0x9b
 1431 0419 00000000 		.4byte	.LFB16
 1432 041d 40000000 		.4byte	.LFE16-.LFB16
 1433 0421 01       		.uleb128 0x1
 1434 0422 9C       		.byte	0x9c
 1435 0423 63040000 		.4byte	0x463
 1436 0427 0F       		.uleb128 0xf
 1437 0428 18040000 		.4byte	.LASF35
 1438 042c 01       		.byte	0x1
 1439 042d 2A03     		.2byte	0x32a
 1440 042f 83000000 		.4byte	0x83
 1441 0433 FA020000 		.4byte	.LLST18
 1442 0437 0F       		.uleb128 0xf
 1443 0438 43040000 		.4byte	.LASF50
 1444 043c 01       		.byte	0x1
 1445 043d 2A03     		.2byte	0x32a
 1446 043f 8F000000 		.4byte	0x8f
 1447 0443 26030000 		.4byte	.LLST19
 1448 0447 13       		.uleb128 0x13
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 42


 1449 0448 72020000 		.4byte	.LASF66
 1450 044c 01       		.byte	0x1
 1451 044d 2C03     		.2byte	0x32c
 1452 044f C1000000 		.4byte	0xc1
 1453 0453 0A       		.uleb128 0xa
 1454 0454 10000000 		.4byte	.LVL57
 1455 0458 6D050000 		.4byte	0x56d
 1456 045c 09       		.uleb128 0x9
 1457 045d 01       		.uleb128 0x1
 1458 045e 50       		.byte	0x50
 1459 045f 01       		.uleb128 0x1
 1460 0460 30       		.byte	0x30
 1461 0461 00       		.byte	0
 1462 0462 00       		.byte	0
 1463 0463 11       		.uleb128 0x11
 1464 0464 DB030000 		.4byte	.LASF53
 1465 0468 01       		.byte	0x1
 1466 0469 5703     		.2byte	0x357
 1467 046b A7000000 		.4byte	0xa7
 1468 046f 00000000 		.4byte	.LFB17
 1469 0473 48000000 		.4byte	.LFE17-.LFB17
 1470 0477 01       		.uleb128 0x1
 1471 0478 9C       		.byte	0x9c
 1472 0479 BB040000 		.4byte	0x4bb
 1473 047d 0F       		.uleb128 0xf
 1474 047e 18040000 		.4byte	.LASF35
 1475 0482 01       		.byte	0x1
 1476 0483 5703     		.2byte	0x357
 1477 0485 83000000 		.4byte	0x83
 1478 0489 52030000 		.4byte	.LLST20
 1479 048d 0F       		.uleb128 0xf
 1480 048e 43040000 		.4byte	.LASF50
 1481 0492 01       		.byte	0x1
 1482 0493 5703     		.2byte	0x357
 1483 0495 8F000000 		.4byte	0x8f
 1484 0499 7E030000 		.4byte	.LLST21
 1485 049d 12       		.uleb128 0x12
 1486 049e 8B020000 		.4byte	.LASF54
 1487 04a2 01       		.byte	0x1
 1488 04a3 5903     		.2byte	0x359
 1489 04a5 A7000000 		.4byte	0xa7
 1490 04a9 01       		.uleb128 0x1
 1491 04aa 50       		.byte	0x50
 1492 04ab 0A       		.uleb128 0xa
 1493 04ac 10000000 		.4byte	.LVL64
 1494 04b0 6D050000 		.4byte	0x56d
 1495 04b4 09       		.uleb128 0x9
 1496 04b5 01       		.uleb128 0x1
 1497 04b6 50       		.byte	0x50
 1498 04b7 01       		.uleb128 0x1
 1499 04b8 30       		.byte	0x30
 1500 04b9 00       		.byte	0
 1501 04ba 00       		.byte	0
 1502 04bb 14       		.uleb128 0x14
 1503 04bc CB040000 		.4byte	0x4cb
 1504 04c0 CB040000 		.4byte	0x4cb
 1505 04c4 15       		.uleb128 0x15
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 43


 1506 04c5 EC000000 		.4byte	0xec
 1507 04c9 00       		.byte	0
 1508 04ca 00       		.byte	0
 1509 04cb 16       		.uleb128 0x16
 1510 04cc 83000000 		.4byte	0x83
 1511 04d0 17       		.uleb128 0x17
 1512 04d1 BD020000 		.4byte	.LASF55
 1513 04d5 01       		.byte	0x1
 1514 04d6 21       		.byte	0x21
 1515 04d7 E0040000 		.4byte	0x4e0
 1516 04db 04       		.byte	0x4
 1517 04dc 00       		.byte	0
 1518 04dd 00       		.byte	0
 1519 04de 00       		.byte	0
 1520 04df 00       		.byte	0
 1521 04e0 16       		.uleb128 0x16
 1522 04e1 BB040000 		.4byte	0x4bb
 1523 04e5 18       		.uleb128 0x18
 1524 04e6 4F020000 		.4byte	.LASF56
 1525 04ea 01       		.byte	0x1
 1526 04eb 18       		.byte	0x18
 1527 04ec 6B000000 		.4byte	0x6b
 1528 04f0 05       		.uleb128 0x5
 1529 04f1 03       		.byte	0x3
 1530 04f2 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1531 04f6 14       		.uleb128 0x14
 1532 04f7 06050000 		.4byte	0x506
 1533 04fb 06050000 		.4byte	0x506
 1534 04ff 15       		.uleb128 0x15
 1535 0500 EC000000 		.4byte	0xec
 1536 0504 00       		.byte	0
 1537 0505 00       		.byte	0
 1538 0506 05       		.uleb128 0x5
 1539 0507 8F000000 		.4byte	0x8f
 1540 050b 18       		.uleb128 0x18
 1541 050c 00000000 		.4byte	.LASF57
 1542 0510 01       		.byte	0x1
 1543 0511 19       		.byte	0x19
 1544 0512 1C050000 		.4byte	0x51c
 1545 0516 05       		.uleb128 0x5
 1546 0517 03       		.byte	0x3
 1547 0518 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1548 051c 05       		.uleb128 0x5
 1549 051d F6040000 		.4byte	0x4f6
 1550 0521 14       		.uleb128 0x14
 1551 0522 31050000 		.4byte	0x531
 1552 0526 31050000 		.4byte	0x531
 1553 052a 15       		.uleb128 0x15
 1554 052b EC000000 		.4byte	0xec
 1555 052f 00       		.byte	0
 1556 0530 00       		.byte	0
 1557 0531 05       		.uleb128 0x5
 1558 0532 9B000000 		.4byte	0x9b
 1559 0536 18       		.uleb128 0x18
 1560 0537 4D040000 		.4byte	.LASF58
 1561 053b 01       		.byte	0x1
 1562 053c 1A       		.byte	0x1a
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 44


 1563 053d 47050000 		.4byte	0x547
 1564 0541 05       		.uleb128 0x5
 1565 0542 03       		.byte	0x3
 1566 0543 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1567 0547 05       		.uleb128 0x5
 1568 0548 21050000 		.4byte	0x521
 1569 054c 19       		.uleb128 0x19
 1570 054d 4B030000 		.4byte	.LASF59
 1571 0551 4B030000 		.4byte	.LASF59
 1572 0555 03       		.byte	0x3
 1573 0556 C0       		.byte	0xc0
 1574 0557 19       		.uleb128 0x19
 1575 0558 AE020000 		.4byte	.LASF60
 1576 055c AE020000 		.4byte	.LASF60
 1577 0560 03       		.byte	0x3
 1578 0561 BD       		.byte	0xbd
 1579 0562 19       		.uleb128 0x19
 1580 0563 0C020000 		.4byte	.LASF61
 1581 0567 0C020000 		.4byte	.LASF61
 1582 056b 03       		.byte	0x3
 1583 056c DA       		.byte	0xda
 1584 056d 19       		.uleb128 0x19
 1585 056e BC030000 		.4byte	.LASF62
 1586 0572 BC030000 		.4byte	.LASF62
 1587 0576 03       		.byte	0x3
 1588 0577 E7       		.byte	0xe7
 1589 0578 00       		.byte	0
 1590              		.section	.debug_abbrev,"",%progbits
 1591              	.Ldebug_abbrev0:
 1592 0000 01       		.uleb128 0x1
 1593 0001 11       		.uleb128 0x11
 1594 0002 01       		.byte	0x1
 1595 0003 25       		.uleb128 0x25
 1596 0004 0E       		.uleb128 0xe
 1597 0005 13       		.uleb128 0x13
 1598 0006 0B       		.uleb128 0xb
 1599 0007 03       		.uleb128 0x3
 1600 0008 0E       		.uleb128 0xe
 1601 0009 1B       		.uleb128 0x1b
 1602 000a 0E       		.uleb128 0xe
 1603 000b 55       		.uleb128 0x55
 1604 000c 17       		.uleb128 0x17
 1605 000d 11       		.uleb128 0x11
 1606 000e 01       		.uleb128 0x1
 1607 000f 10       		.uleb128 0x10
 1608 0010 17       		.uleb128 0x17
 1609 0011 00       		.byte	0
 1610 0012 00       		.byte	0
 1611 0013 02       		.uleb128 0x2
 1612 0014 24       		.uleb128 0x24
 1613 0015 00       		.byte	0
 1614 0016 0B       		.uleb128 0xb
 1615 0017 0B       		.uleb128 0xb
 1616 0018 3E       		.uleb128 0x3e
 1617 0019 0B       		.uleb128 0xb
 1618 001a 03       		.uleb128 0x3
 1619 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 45


 1620 001c 00       		.byte	0
 1621 001d 00       		.byte	0
 1622 001e 03       		.uleb128 0x3
 1623 001f 24       		.uleb128 0x24
 1624 0020 00       		.byte	0
 1625 0021 0B       		.uleb128 0xb
 1626 0022 0B       		.uleb128 0xb
 1627 0023 3E       		.uleb128 0x3e
 1628 0024 0B       		.uleb128 0xb
 1629 0025 03       		.uleb128 0x3
 1630 0026 08       		.uleb128 0x8
 1631 0027 00       		.byte	0
 1632 0028 00       		.byte	0
 1633 0029 04       		.uleb128 0x4
 1634 002a 16       		.uleb128 0x16
 1635 002b 00       		.byte	0
 1636 002c 03       		.uleb128 0x3
 1637 002d 0E       		.uleb128 0xe
 1638 002e 3A       		.uleb128 0x3a
 1639 002f 0B       		.uleb128 0xb
 1640 0030 3B       		.uleb128 0x3b
 1641 0031 05       		.uleb128 0x5
 1642 0032 49       		.uleb128 0x49
 1643 0033 13       		.uleb128 0x13
 1644 0034 00       		.byte	0
 1645 0035 00       		.byte	0
 1646 0036 05       		.uleb128 0x5
 1647 0037 35       		.uleb128 0x35
 1648 0038 00       		.byte	0
 1649 0039 49       		.uleb128 0x49
 1650 003a 13       		.uleb128 0x13
 1651 003b 00       		.byte	0
 1652 003c 00       		.byte	0
 1653 003d 06       		.uleb128 0x6
 1654 003e 2E       		.uleb128 0x2e
 1655 003f 01       		.byte	0x1
 1656 0040 3F       		.uleb128 0x3f
 1657 0041 19       		.uleb128 0x19
 1658 0042 03       		.uleb128 0x3
 1659 0043 0E       		.uleb128 0xe
 1660 0044 3A       		.uleb128 0x3a
 1661 0045 0B       		.uleb128 0xb
 1662 0046 3B       		.uleb128 0x3b
 1663 0047 0B       		.uleb128 0xb
 1664 0048 27       		.uleb128 0x27
 1665 0049 19       		.uleb128 0x19
 1666 004a 11       		.uleb128 0x11
 1667 004b 01       		.uleb128 0x1
 1668 004c 12       		.uleb128 0x12
 1669 004d 06       		.uleb128 0x6
 1670 004e 40       		.uleb128 0x40
 1671 004f 18       		.uleb128 0x18
 1672 0050 9742     		.uleb128 0x2117
 1673 0052 19       		.uleb128 0x19
 1674 0053 01       		.uleb128 0x1
 1675 0054 13       		.uleb128 0x13
 1676 0055 00       		.byte	0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 46


 1677 0056 00       		.byte	0
 1678 0057 07       		.uleb128 0x7
 1679 0058 34       		.uleb128 0x34
 1680 0059 00       		.byte	0
 1681 005a 03       		.uleb128 0x3
 1682 005b 0E       		.uleb128 0xe
 1683 005c 3A       		.uleb128 0x3a
 1684 005d 0B       		.uleb128 0xb
 1685 005e 3B       		.uleb128 0x3b
 1686 005f 0B       		.uleb128 0xb
 1687 0060 49       		.uleb128 0x49
 1688 0061 13       		.uleb128 0x13
 1689 0062 02       		.uleb128 0x2
 1690 0063 17       		.uleb128 0x17
 1691 0064 00       		.byte	0
 1692 0065 00       		.byte	0
 1693 0066 08       		.uleb128 0x8
 1694 0067 898201   		.uleb128 0x4109
 1695 006a 01       		.byte	0x1
 1696 006b 11       		.uleb128 0x11
 1697 006c 01       		.uleb128 0x1
 1698 006d 31       		.uleb128 0x31
 1699 006e 13       		.uleb128 0x13
 1700 006f 01       		.uleb128 0x1
 1701 0070 13       		.uleb128 0x13
 1702 0071 00       		.byte	0
 1703 0072 00       		.byte	0
 1704 0073 09       		.uleb128 0x9
 1705 0074 8A8201   		.uleb128 0x410a
 1706 0077 00       		.byte	0
 1707 0078 02       		.uleb128 0x2
 1708 0079 18       		.uleb128 0x18
 1709 007a 9142     		.uleb128 0x2111
 1710 007c 18       		.uleb128 0x18
 1711 007d 00       		.byte	0
 1712 007e 00       		.byte	0
 1713 007f 0A       		.uleb128 0xa
 1714 0080 898201   		.uleb128 0x4109
 1715 0083 01       		.byte	0x1
 1716 0084 11       		.uleb128 0x11
 1717 0085 01       		.uleb128 0x1
 1718 0086 31       		.uleb128 0x31
 1719 0087 13       		.uleb128 0x13
 1720 0088 00       		.byte	0
 1721 0089 00       		.byte	0
 1722 008a 0B       		.uleb128 0xb
 1723 008b 2E       		.uleb128 0x2e
 1724 008c 01       		.byte	0x1
 1725 008d 3F       		.uleb128 0x3f
 1726 008e 19       		.uleb128 0x19
 1727 008f 03       		.uleb128 0x3
 1728 0090 0E       		.uleb128 0xe
 1729 0091 3A       		.uleb128 0x3a
 1730 0092 0B       		.uleb128 0xb
 1731 0093 3B       		.uleb128 0x3b
 1732 0094 05       		.uleb128 0x5
 1733 0095 27       		.uleb128 0x27
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 47


 1734 0096 19       		.uleb128 0x19
 1735 0097 11       		.uleb128 0x11
 1736 0098 01       		.uleb128 0x1
 1737 0099 12       		.uleb128 0x12
 1738 009a 06       		.uleb128 0x6
 1739 009b 40       		.uleb128 0x40
 1740 009c 18       		.uleb128 0x18
 1741 009d 9742     		.uleb128 0x2117
 1742 009f 19       		.uleb128 0x19
 1743 00a0 01       		.uleb128 0x1
 1744 00a1 13       		.uleb128 0x13
 1745 00a2 00       		.byte	0
 1746 00a3 00       		.byte	0
 1747 00a4 0C       		.uleb128 0xc
 1748 00a5 898201   		.uleb128 0x4109
 1749 00a8 00       		.byte	0
 1750 00a9 11       		.uleb128 0x11
 1751 00aa 01       		.uleb128 0x1
 1752 00ab 31       		.uleb128 0x31
 1753 00ac 13       		.uleb128 0x13
 1754 00ad 00       		.byte	0
 1755 00ae 00       		.byte	0
 1756 00af 0D       		.uleb128 0xd
 1757 00b0 2E       		.uleb128 0x2e
 1758 00b1 00       		.byte	0
 1759 00b2 3F       		.uleb128 0x3f
 1760 00b3 19       		.uleb128 0x19
 1761 00b4 03       		.uleb128 0x3
 1762 00b5 0E       		.uleb128 0xe
 1763 00b6 3A       		.uleb128 0x3a
 1764 00b7 0B       		.uleb128 0xb
 1765 00b8 3B       		.uleb128 0x3b
 1766 00b9 05       		.uleb128 0x5
 1767 00ba 27       		.uleb128 0x27
 1768 00bb 19       		.uleb128 0x19
 1769 00bc 11       		.uleb128 0x11
 1770 00bd 01       		.uleb128 0x1
 1771 00be 12       		.uleb128 0x12
 1772 00bf 06       		.uleb128 0x6
 1773 00c0 40       		.uleb128 0x40
 1774 00c1 18       		.uleb128 0x18
 1775 00c2 9742     		.uleb128 0x2117
 1776 00c4 19       		.uleb128 0x19
 1777 00c5 00       		.byte	0
 1778 00c6 00       		.byte	0
 1779 00c7 0E       		.uleb128 0xe
 1780 00c8 2E       		.uleb128 0x2e
 1781 00c9 01       		.byte	0x1
 1782 00ca 3F       		.uleb128 0x3f
 1783 00cb 19       		.uleb128 0x19
 1784 00cc 03       		.uleb128 0x3
 1785 00cd 0E       		.uleb128 0xe
 1786 00ce 3A       		.uleb128 0x3a
 1787 00cf 0B       		.uleb128 0xb
 1788 00d0 3B       		.uleb128 0x3b
 1789 00d1 05       		.uleb128 0x5
 1790 00d2 27       		.uleb128 0x27
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 48


 1791 00d3 19       		.uleb128 0x19
 1792 00d4 49       		.uleb128 0x49
 1793 00d5 13       		.uleb128 0x13
 1794 00d6 11       		.uleb128 0x11
 1795 00d7 01       		.uleb128 0x1
 1796 00d8 12       		.uleb128 0x12
 1797 00d9 06       		.uleb128 0x6
 1798 00da 40       		.uleb128 0x40
 1799 00db 18       		.uleb128 0x18
 1800 00dc 9742     		.uleb128 0x2117
 1801 00de 19       		.uleb128 0x19
 1802 00df 01       		.uleb128 0x1
 1803 00e0 13       		.uleb128 0x13
 1804 00e1 00       		.byte	0
 1805 00e2 00       		.byte	0
 1806 00e3 0F       		.uleb128 0xf
 1807 00e4 05       		.uleb128 0x5
 1808 00e5 00       		.byte	0
 1809 00e6 03       		.uleb128 0x3
 1810 00e7 0E       		.uleb128 0xe
 1811 00e8 3A       		.uleb128 0x3a
 1812 00e9 0B       		.uleb128 0xb
 1813 00ea 3B       		.uleb128 0x3b
 1814 00eb 05       		.uleb128 0x5
 1815 00ec 49       		.uleb128 0x49
 1816 00ed 13       		.uleb128 0x13
 1817 00ee 02       		.uleb128 0x2
 1818 00ef 17       		.uleb128 0x17
 1819 00f0 00       		.byte	0
 1820 00f1 00       		.byte	0
 1821 00f2 10       		.uleb128 0x10
 1822 00f3 34       		.uleb128 0x34
 1823 00f4 00       		.byte	0
 1824 00f5 03       		.uleb128 0x3
 1825 00f6 0E       		.uleb128 0xe
 1826 00f7 3A       		.uleb128 0x3a
 1827 00f8 0B       		.uleb128 0xb
 1828 00f9 3B       		.uleb128 0x3b
 1829 00fa 05       		.uleb128 0x5
 1830 00fb 49       		.uleb128 0x49
 1831 00fc 13       		.uleb128 0x13
 1832 00fd 02       		.uleb128 0x2
 1833 00fe 17       		.uleb128 0x17
 1834 00ff 00       		.byte	0
 1835 0100 00       		.byte	0
 1836 0101 11       		.uleb128 0x11
 1837 0102 2E       		.uleb128 0x2e
 1838 0103 01       		.byte	0x1
 1839 0104 3F       		.uleb128 0x3f
 1840 0105 19       		.uleb128 0x19
 1841 0106 03       		.uleb128 0x3
 1842 0107 0E       		.uleb128 0xe
 1843 0108 3A       		.uleb128 0x3a
 1844 0109 0B       		.uleb128 0xb
 1845 010a 3B       		.uleb128 0x3b
 1846 010b 05       		.uleb128 0x5
 1847 010c 27       		.uleb128 0x27
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 49


 1848 010d 19       		.uleb128 0x19
 1849 010e 49       		.uleb128 0x49
 1850 010f 13       		.uleb128 0x13
 1851 0110 11       		.uleb128 0x11
 1852 0111 01       		.uleb128 0x1
 1853 0112 12       		.uleb128 0x12
 1854 0113 06       		.uleb128 0x6
 1855 0114 40       		.uleb128 0x40
 1856 0115 18       		.uleb128 0x18
 1857 0116 9642     		.uleb128 0x2116
 1858 0118 19       		.uleb128 0x19
 1859 0119 01       		.uleb128 0x1
 1860 011a 13       		.uleb128 0x13
 1861 011b 00       		.byte	0
 1862 011c 00       		.byte	0
 1863 011d 12       		.uleb128 0x12
 1864 011e 34       		.uleb128 0x34
 1865 011f 00       		.byte	0
 1866 0120 03       		.uleb128 0x3
 1867 0121 0E       		.uleb128 0xe
 1868 0122 3A       		.uleb128 0x3a
 1869 0123 0B       		.uleb128 0xb
 1870 0124 3B       		.uleb128 0x3b
 1871 0125 05       		.uleb128 0x5
 1872 0126 49       		.uleb128 0x49
 1873 0127 13       		.uleb128 0x13
 1874 0128 02       		.uleb128 0x2
 1875 0129 18       		.uleb128 0x18
 1876 012a 00       		.byte	0
 1877 012b 00       		.byte	0
 1878 012c 13       		.uleb128 0x13
 1879 012d 34       		.uleb128 0x34
 1880 012e 00       		.byte	0
 1881 012f 03       		.uleb128 0x3
 1882 0130 0E       		.uleb128 0xe
 1883 0131 3A       		.uleb128 0x3a
 1884 0132 0B       		.uleb128 0xb
 1885 0133 3B       		.uleb128 0x3b
 1886 0134 05       		.uleb128 0x5
 1887 0135 49       		.uleb128 0x49
 1888 0136 13       		.uleb128 0x13
 1889 0137 00       		.byte	0
 1890 0138 00       		.byte	0
 1891 0139 14       		.uleb128 0x14
 1892 013a 01       		.uleb128 0x1
 1893 013b 01       		.byte	0x1
 1894 013c 49       		.uleb128 0x49
 1895 013d 13       		.uleb128 0x13
 1896 013e 01       		.uleb128 0x1
 1897 013f 13       		.uleb128 0x13
 1898 0140 00       		.byte	0
 1899 0141 00       		.byte	0
 1900 0142 15       		.uleb128 0x15
 1901 0143 21       		.uleb128 0x21
 1902 0144 00       		.byte	0
 1903 0145 49       		.uleb128 0x49
 1904 0146 13       		.uleb128 0x13
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 50


 1905 0147 2F       		.uleb128 0x2f
 1906 0148 0B       		.uleb128 0xb
 1907 0149 00       		.byte	0
 1908 014a 00       		.byte	0
 1909 014b 16       		.uleb128 0x16
 1910 014c 26       		.uleb128 0x26
 1911 014d 00       		.byte	0
 1912 014e 49       		.uleb128 0x49
 1913 014f 13       		.uleb128 0x13
 1914 0150 00       		.byte	0
 1915 0151 00       		.byte	0
 1916 0152 17       		.uleb128 0x17
 1917 0153 34       		.uleb128 0x34
 1918 0154 00       		.byte	0
 1919 0155 03       		.uleb128 0x3
 1920 0156 0E       		.uleb128 0xe
 1921 0157 3A       		.uleb128 0x3a
 1922 0158 0B       		.uleb128 0xb
 1923 0159 3B       		.uleb128 0x3b
 1924 015a 0B       		.uleb128 0xb
 1925 015b 49       		.uleb128 0x49
 1926 015c 13       		.uleb128 0x13
 1927 015d 1C       		.uleb128 0x1c
 1928 015e 0A       		.uleb128 0xa
 1929 015f 00       		.byte	0
 1930 0160 00       		.byte	0
 1931 0161 18       		.uleb128 0x18
 1932 0162 34       		.uleb128 0x34
 1933 0163 00       		.byte	0
 1934 0164 03       		.uleb128 0x3
 1935 0165 0E       		.uleb128 0xe
 1936 0166 3A       		.uleb128 0x3a
 1937 0167 0B       		.uleb128 0xb
 1938 0168 3B       		.uleb128 0x3b
 1939 0169 0B       		.uleb128 0xb
 1940 016a 49       		.uleb128 0x49
 1941 016b 13       		.uleb128 0x13
 1942 016c 3F       		.uleb128 0x3f
 1943 016d 19       		.uleb128 0x19
 1944 016e 02       		.uleb128 0x2
 1945 016f 18       		.uleb128 0x18
 1946 0170 00       		.byte	0
 1947 0171 00       		.byte	0
 1948 0172 19       		.uleb128 0x19
 1949 0173 2E       		.uleb128 0x2e
 1950 0174 00       		.byte	0
 1951 0175 3F       		.uleb128 0x3f
 1952 0176 19       		.uleb128 0x19
 1953 0177 3C       		.uleb128 0x3c
 1954 0178 19       		.uleb128 0x19
 1955 0179 6E       		.uleb128 0x6e
 1956 017a 0E       		.uleb128 0xe
 1957 017b 03       		.uleb128 0x3
 1958 017c 0E       		.uleb128 0xe
 1959 017d 3A       		.uleb128 0x3a
 1960 017e 0B       		.uleb128 0xb
 1961 017f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 51


 1962 0180 0B       		.uleb128 0xb
 1963 0181 00       		.byte	0
 1964 0182 00       		.byte	0
 1965 0183 00       		.byte	0
 1966              		.section	.debug_loc,"",%progbits
 1967              	.Ldebug_loc0:
 1968              	.LLST0:
 1969 0000 76000000 		.4byte	.LVL5
 1970 0004 7A000000 		.4byte	.LVL7
 1971 0008 0200     		.2byte	0x2
 1972 000a 30       		.byte	0x30
 1973 000b 9F       		.byte	0x9f
 1974 000c 7A000000 		.4byte	.LVL7
 1975 0010 FC000000 		.4byte	.LFE1
 1976 0014 0100     		.2byte	0x1
 1977 0016 53       		.byte	0x53
 1978 0017 00000000 		.4byte	0
 1979 001b 00000000 		.4byte	0
 1980              	.LLST1:
 1981 001f 6E000000 		.4byte	.LVL2
 1982 0023 72000000 		.4byte	.LVL3
 1983 0027 0100     		.2byte	0x1
 1984 0029 50       		.byte	0x50
 1985 002a 72000000 		.4byte	.LVL3
 1986 002e 74000000 		.4byte	.LVL4
 1987 0032 0100     		.2byte	0x1
 1988 0034 52       		.byte	0x52
 1989 0035 74000000 		.4byte	.LVL4
 1990 0039 78000000 		.4byte	.LVL6
 1991 003d 0100     		.2byte	0x1
 1992 003f 53       		.byte	0x53
 1993 0040 78000000 		.4byte	.LVL6
 1994 0044 7A000000 		.4byte	.LVL7
 1995 0048 0200     		.2byte	0x2
 1996 004a 71       		.byte	0x71
 1997 004b 00       		.sleb128 0
 1998 004c 7A000000 		.4byte	.LVL7
 1999 0050 92000000 		.4byte	.LVL9
 2000 0054 0200     		.2byte	0x2
 2001 0056 30       		.byte	0x30
 2002 0057 9F       		.byte	0x9f
 2003 0058 00000000 		.4byte	0
 2004 005c 00000000 		.4byte	0
 2005              	.LLST2:
 2006 0060 84000000 		.4byte	.LVL8
 2007 0064 92000000 		.4byte	.LVL9
 2008 0068 0400     		.2byte	0x4
 2009 006a 0A       		.byte	0xa
 2010 006b 0010     		.2byte	0x1000
 2011 006d 9F       		.byte	0x9f
 2012 006e 00000000 		.4byte	0
 2013 0072 00000000 		.4byte	0
 2014              	.LLST3:
 2015 0076 00000000 		.4byte	.LVL13
 2016 007a 06000000 		.4byte	.LVL15
 2017 007e 0100     		.2byte	0x1
 2018 0080 50       		.byte	0x50
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 52


 2019 0081 06000000 		.4byte	.LVL15
 2020 0085 1A000000 		.4byte	.LVL17
 2021 0089 0100     		.2byte	0x1
 2022 008b 52       		.byte	0x52
 2023 008c 1A000000 		.4byte	.LVL17
 2024 0090 20000000 		.4byte	.LVL18
 2025 0094 0400     		.2byte	0x4
 2026 0096 F3       		.byte	0xf3
 2027 0097 01       		.uleb128 0x1
 2028 0098 50       		.byte	0x50
 2029 0099 9F       		.byte	0x9f
 2030 009a 20000000 		.4byte	.LVL18
 2031 009e 22000000 		.4byte	.LVL19
 2032 00a2 0100     		.2byte	0x1
 2033 00a4 50       		.byte	0x50
 2034 00a5 22000000 		.4byte	.LVL19
 2035 00a9 28000000 		.4byte	.LFE6
 2036 00ad 0400     		.2byte	0x4
 2037 00af F3       		.byte	0xf3
 2038 00b0 01       		.uleb128 0x1
 2039 00b1 50       		.byte	0x50
 2040 00b2 9F       		.byte	0x9f
 2041 00b3 00000000 		.4byte	0
 2042 00b7 00000000 		.4byte	0
 2043              	.LLST4:
 2044 00bb 02000000 		.4byte	.LVL14
 2045 00bf 06000000 		.4byte	.LVL15
 2046 00c3 0200     		.2byte	0x2
 2047 00c5 30       		.byte	0x30
 2048 00c6 9F       		.byte	0x9f
 2049 00c7 0E000000 		.4byte	.LVL16
 2050 00cb 20000000 		.4byte	.LVL18
 2051 00cf 0100     		.2byte	0x1
 2052 00d1 50       		.byte	0x50
 2053 00d2 20000000 		.4byte	.LVL18
 2054 00d6 22000000 		.4byte	.LVL19
 2055 00da 0200     		.2byte	0x2
 2056 00dc 30       		.byte	0x30
 2057 00dd 9F       		.byte	0x9f
 2058 00de 22000000 		.4byte	.LVL19
 2059 00e2 28000000 		.4byte	.LFE6
 2060 00e6 0100     		.2byte	0x1
 2061 00e8 50       		.byte	0x50
 2062 00e9 00000000 		.4byte	0
 2063 00ed 00000000 		.4byte	0
 2064              	.LLST5:
 2065 00f1 00000000 		.4byte	.LVL20
 2066 00f5 08000000 		.4byte	.LVL21
 2067 00f9 0100     		.2byte	0x1
 2068 00fb 50       		.byte	0x50
 2069 00fc 08000000 		.4byte	.LVL21
 2070 0100 12000000 		.4byte	.LVL23
 2071 0104 0100     		.2byte	0x1
 2072 0106 54       		.byte	0x54
 2073 0107 12000000 		.4byte	.LVL23
 2074 010b 20000000 		.4byte	.LVL25
 2075 010f 0400     		.2byte	0x4
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 53


 2076 0111 F3       		.byte	0xf3
 2077 0112 01       		.uleb128 0x1
 2078 0113 50       		.byte	0x50
 2079 0114 9F       		.byte	0x9f
 2080 0115 20000000 		.4byte	.LVL25
 2081 0119 22000000 		.4byte	.LVL26
 2082 011d 0100     		.2byte	0x1
 2083 011f 54       		.byte	0x54
 2084 0120 22000000 		.4byte	.LVL26
 2085 0124 2C000000 		.4byte	.LFE7
 2086 0128 0400     		.2byte	0x4
 2087 012a F3       		.byte	0xf3
 2088 012b 01       		.uleb128 0x1
 2089 012c 50       		.byte	0x50
 2090 012d 9F       		.byte	0x9f
 2091 012e 00000000 		.4byte	0
 2092 0132 00000000 		.4byte	0
 2093              	.LLST6:
 2094 0136 1E000000 		.4byte	.LVL24
 2095 013a 20000000 		.4byte	.LVL25
 2096 013e 0100     		.2byte	0x1
 2097 0140 50       		.byte	0x50
 2098 0141 22000000 		.4byte	.LVL26
 2099 0145 24000000 		.4byte	.LVL27
 2100 0149 0100     		.2byte	0x1
 2101 014b 50       		.byte	0x50
 2102 014c 00000000 		.4byte	0
 2103 0150 00000000 		.4byte	0
 2104              	.LLST7:
 2105 0154 00000000 		.4byte	.LVL28
 2106 0158 04000000 		.4byte	.LVL29
 2107 015c 0100     		.2byte	0x1
 2108 015e 50       		.byte	0x50
 2109 015f 04000000 		.4byte	.LVL29
 2110 0163 10000000 		.4byte	.LFE8
 2111 0167 0400     		.2byte	0x4
 2112 0169 F3       		.byte	0xf3
 2113 016a 01       		.uleb128 0x1
 2114 016b 50       		.byte	0x50
 2115 016c 9F       		.byte	0x9f
 2116 016d 00000000 		.4byte	0
 2117 0171 00000000 		.4byte	0
 2118              	.LLST8:
 2119 0175 00000000 		.4byte	.LVL30
 2120 0179 0E000000 		.4byte	.LVL31
 2121 017d 0100     		.2byte	0x1
 2122 017f 50       		.byte	0x50
 2123 0180 0E000000 		.4byte	.LVL31
 2124 0184 1C000000 		.4byte	.LFE9
 2125 0188 0400     		.2byte	0x4
 2126 018a F3       		.byte	0xf3
 2127 018b 01       		.uleb128 0x1
 2128 018c 50       		.byte	0x50
 2129 018d 9F       		.byte	0x9f
 2130 018e 00000000 		.4byte	0
 2131 0192 00000000 		.4byte	0
 2132              	.LLST9:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 54


 2133 0196 00000000 		.4byte	.LVL32
 2134 019a 0E000000 		.4byte	.LVL33
 2135 019e 0100     		.2byte	0x1
 2136 01a0 50       		.byte	0x50
 2137 01a1 0E000000 		.4byte	.LVL33
 2138 01a5 18000000 		.4byte	.LFE10
 2139 01a9 0400     		.2byte	0x4
 2140 01ab F3       		.byte	0xf3
 2141 01ac 01       		.uleb128 0x1
 2142 01ad 50       		.byte	0x50
 2143 01ae 9F       		.byte	0x9f
 2144 01af 00000000 		.4byte	0
 2145 01b3 00000000 		.4byte	0
 2146              	.LLST10:
 2147 01b7 00000000 		.4byte	.LVL34
 2148 01bb 04000000 		.4byte	.LVL35
 2149 01bf 0100     		.2byte	0x1
 2150 01c1 50       		.byte	0x50
 2151 01c2 04000000 		.4byte	.LVL35
 2152 01c6 10000000 		.4byte	.LFE11
 2153 01ca 0400     		.2byte	0x4
 2154 01cc F3       		.byte	0xf3
 2155 01cd 01       		.uleb128 0x1
 2156 01ce 50       		.byte	0x50
 2157 01cf 9F       		.byte	0x9f
 2158 01d0 00000000 		.4byte	0
 2159 01d4 00000000 		.4byte	0
 2160              	.LLST11:
 2161 01d8 00000000 		.4byte	.LVL36
 2162 01dc 04000000 		.4byte	.LVL37
 2163 01e0 0100     		.2byte	0x1
 2164 01e2 50       		.byte	0x50
 2165 01e3 04000000 		.4byte	.LVL37
 2166 01e7 10000000 		.4byte	.LFE12
 2167 01eb 0400     		.2byte	0x4
 2168 01ed F3       		.byte	0xf3
 2169 01ee 01       		.uleb128 0x1
 2170 01ef 50       		.byte	0x50
 2171 01f0 9F       		.byte	0x9f
 2172 01f1 00000000 		.4byte	0
 2173 01f5 00000000 		.4byte	0
 2174              	.LLST12:
 2175 01f9 00000000 		.4byte	.LVL38
 2176 01fd 0C000000 		.4byte	.LVL39
 2177 0201 0100     		.2byte	0x1
 2178 0203 50       		.byte	0x50
 2179 0204 0C000000 		.4byte	.LVL39
 2180 0208 12000000 		.4byte	.LVL41
 2181 020c 0100     		.2byte	0x1
 2182 020e 54       		.byte	0x54
 2183 020f 12000000 		.4byte	.LVL41
 2184 0213 1C000000 		.4byte	.LFE13
 2185 0217 0400     		.2byte	0x4
 2186 0219 F3       		.byte	0xf3
 2187 021a 01       		.uleb128 0x1
 2188 021b 50       		.byte	0x50
 2189 021c 9F       		.byte	0x9f
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 55


 2190 021d 00000000 		.4byte	0
 2191 0221 00000000 		.4byte	0
 2192              	.LLST13:
 2193 0225 00000000 		.4byte	.LVL38
 2194 0229 0F000000 		.4byte	.LVL40-1
 2195 022d 0100     		.2byte	0x1
 2196 022f 51       		.byte	0x51
 2197 0230 0F000000 		.4byte	.LVL40-1
 2198 0234 1C000000 		.4byte	.LFE13
 2199 0238 0400     		.2byte	0x4
 2200 023a F3       		.byte	0xf3
 2201 023b 01       		.uleb128 0x1
 2202 023c 51       		.byte	0x51
 2203 023d 9F       		.byte	0x9f
 2204 023e 00000000 		.4byte	0
 2205 0242 00000000 		.4byte	0
 2206              	.LLST14:
 2207 0246 00000000 		.4byte	.LVL42
 2208 024a 0C000000 		.4byte	.LVL43
 2209 024e 0100     		.2byte	0x1
 2210 0250 50       		.byte	0x50
 2211 0251 0C000000 		.4byte	.LVL43
 2212 0255 12000000 		.4byte	.LVL45
 2213 0259 0100     		.2byte	0x1
 2214 025b 54       		.byte	0x54
 2215 025c 12000000 		.4byte	.LVL45
 2216 0260 1C000000 		.4byte	.LFE14
 2217 0264 0400     		.2byte	0x4
 2218 0266 F3       		.byte	0xf3
 2219 0267 01       		.uleb128 0x1
 2220 0268 50       		.byte	0x50
 2221 0269 9F       		.byte	0x9f
 2222 026a 00000000 		.4byte	0
 2223 026e 00000000 		.4byte	0
 2224              	.LLST15:
 2225 0272 00000000 		.4byte	.LVL42
 2226 0276 0F000000 		.4byte	.LVL44-1
 2227 027a 0100     		.2byte	0x1
 2228 027c 51       		.byte	0x51
 2229 027d 0F000000 		.4byte	.LVL44-1
 2230 0281 16000000 		.4byte	.LVL46
 2231 0285 0100     		.2byte	0x1
 2232 0287 55       		.byte	0x55
 2233 0288 16000000 		.4byte	.LVL46
 2234 028c 1C000000 		.4byte	.LFE14
 2235 0290 0800     		.2byte	0x8
 2236 0292 F3       		.byte	0xf3
 2237 0293 01       		.uleb128 0x1
 2238 0294 50       		.byte	0x50
 2239 0295 32       		.byte	0x32
 2240 0296 24       		.byte	0x24
 2241 0297 73       		.byte	0x73
 2242 0298 00       		.sleb128 0
 2243 0299 22       		.byte	0x22
 2244 029a 00000000 		.4byte	0
 2245 029e 00000000 		.4byte	0
 2246              	.LLST16:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 56


 2247 02a2 00000000 		.4byte	.LVL47
 2248 02a6 0C000000 		.4byte	.LVL48
 2249 02aa 0100     		.2byte	0x1
 2250 02ac 50       		.byte	0x50
 2251 02ad 0C000000 		.4byte	.LVL48
 2252 02b1 44000000 		.4byte	.LVL51
 2253 02b5 0100     		.2byte	0x1
 2254 02b7 54       		.byte	0x54
 2255 02b8 44000000 		.4byte	.LVL51
 2256 02bc 5C000000 		.4byte	.LFE15
 2257 02c0 0400     		.2byte	0x4
 2258 02c2 F3       		.byte	0xf3
 2259 02c3 01       		.uleb128 0x1
 2260 02c4 50       		.byte	0x50
 2261 02c5 9F       		.byte	0x9f
 2262 02c6 00000000 		.4byte	0
 2263 02ca 00000000 		.4byte	0
 2264              	.LLST17:
 2265 02ce 00000000 		.4byte	.LVL47
 2266 02d2 0F000000 		.4byte	.LVL49-1
 2267 02d6 0100     		.2byte	0x1
 2268 02d8 51       		.byte	0x51
 2269 02d9 0F000000 		.4byte	.LVL49-1
 2270 02dd 1C000000 		.4byte	.LVL50
 2271 02e1 0400     		.2byte	0x4
 2272 02e3 F3       		.byte	0xf3
 2273 02e4 01       		.uleb128 0x1
 2274 02e5 51       		.byte	0x51
 2275 02e6 9F       		.byte	0x9f
 2276 02e7 1C000000 		.4byte	.LVL50
 2277 02eb 48000000 		.4byte	.LVL52
 2278 02ef 0100     		.2byte	0x1
 2279 02f1 51       		.byte	0x51
 2280 02f2 00000000 		.4byte	0
 2281 02f6 00000000 		.4byte	0
 2282              	.LLST18:
 2283 02fa 00000000 		.4byte	.LVL55
 2284 02fe 0C000000 		.4byte	.LVL56
 2285 0302 0100     		.2byte	0x1
 2286 0304 50       		.byte	0x50
 2287 0305 0C000000 		.4byte	.LVL56
 2288 0309 28000000 		.4byte	.LVL60
 2289 030d 0100     		.2byte	0x1
 2290 030f 55       		.byte	0x55
 2291 0310 28000000 		.4byte	.LVL60
 2292 0314 40000000 		.4byte	.LFE16
 2293 0318 0400     		.2byte	0x4
 2294 031a F3       		.byte	0xf3
 2295 031b 01       		.uleb128 0x1
 2296 031c 50       		.byte	0x50
 2297 031d 9F       		.byte	0x9f
 2298 031e 00000000 		.4byte	0
 2299 0322 00000000 		.4byte	0
 2300              	.LLST19:
 2301 0326 00000000 		.4byte	.LVL55
 2302 032a 0F000000 		.4byte	.LVL57-1
 2303 032e 0100     		.2byte	0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 57


 2304 0330 51       		.byte	0x51
 2305 0331 0F000000 		.4byte	.LVL57-1
 2306 0335 1C000000 		.4byte	.LVL58
 2307 0339 0400     		.2byte	0x4
 2308 033b F3       		.byte	0xf3
 2309 033c 01       		.uleb128 0x1
 2310 033d 51       		.byte	0x51
 2311 033e 9F       		.byte	0x9f
 2312 033f 1C000000 		.4byte	.LVL58
 2313 0343 25000000 		.4byte	.LVL59-1
 2314 0347 0100     		.2byte	0x1
 2315 0349 50       		.byte	0x50
 2316 034a 00000000 		.4byte	0
 2317 034e 00000000 		.4byte	0
 2318              	.LLST20:
 2319 0352 00000000 		.4byte	.LVL62
 2320 0356 0C000000 		.4byte	.LVL63
 2321 035a 0100     		.2byte	0x1
 2322 035c 50       		.byte	0x50
 2323 035d 0C000000 		.4byte	.LVL63
 2324 0361 2A000000 		.4byte	.LVL68
 2325 0365 0100     		.2byte	0x1
 2326 0367 54       		.byte	0x54
 2327 0368 2A000000 		.4byte	.LVL68
 2328 036c 48000000 		.4byte	.LFE17
 2329 0370 0400     		.2byte	0x4
 2330 0372 F3       		.byte	0xf3
 2331 0373 01       		.uleb128 0x1
 2332 0374 50       		.byte	0x50
 2333 0375 9F       		.byte	0x9f
 2334 0376 00000000 		.4byte	0
 2335 037a 00000000 		.4byte	0
 2336              	.LLST21:
 2337 037e 00000000 		.4byte	.LVL62
 2338 0382 0F000000 		.4byte	.LVL64-1
 2339 0386 0100     		.2byte	0x1
 2340 0388 51       		.byte	0x51
 2341 0389 0F000000 		.4byte	.LVL64-1
 2342 038d 1C000000 		.4byte	.LVL65
 2343 0391 0400     		.2byte	0x4
 2344 0393 F3       		.byte	0xf3
 2345 0394 01       		.uleb128 0x1
 2346 0395 51       		.byte	0x51
 2347 0396 9F       		.byte	0x9f
 2348 0397 1C000000 		.4byte	.LVL65
 2349 039b 1F000000 		.4byte	.LVL66-1
 2350 039f 0100     		.2byte	0x1
 2351 03a1 50       		.byte	0x50
 2352 03a2 00000000 		.4byte	0
 2353 03a6 00000000 		.4byte	0
 2354              		.section	.debug_aranges,"",%progbits
 2355 0000 A4000000 		.4byte	0xa4
 2356 0004 0200     		.2byte	0x2
 2357 0006 00000000 		.4byte	.Ldebug_info0
 2358 000a 04       		.byte	0x4
 2359 000b 00       		.byte	0
 2360 000c 0000     		.2byte	0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 58


 2361 000e 0000     		.2byte	0
 2362 0010 00000000 		.4byte	.LFB1
 2363 0014 FC000000 		.4byte	.LFE1-.LFB1
 2364 0018 00000000 		.4byte	.LFB2
 2365 001c 24000000 		.4byte	.LFE2-.LFB2
 2366 0020 00000000 		.4byte	.LFB0
 2367 0024 20000000 		.4byte	.LFE0-.LFB0
 2368 0028 00000000 		.4byte	.LFB3
 2369 002c 10000000 		.4byte	.LFE3-.LFB3
 2370 0030 00000000 		.4byte	.LFB4
 2371 0034 14000000 		.4byte	.LFE4-.LFB4
 2372 0038 00000000 		.4byte	.LFB5
 2373 003c 14000000 		.4byte	.LFE5-.LFB5
 2374 0040 00000000 		.4byte	.LFB6
 2375 0044 28000000 		.4byte	.LFE6-.LFB6
 2376 0048 00000000 		.4byte	.LFB7
 2377 004c 2C000000 		.4byte	.LFE7-.LFB7
 2378 0050 00000000 		.4byte	.LFB8
 2379 0054 10000000 		.4byte	.LFE8-.LFB8
 2380 0058 00000000 		.4byte	.LFB9
 2381 005c 1C000000 		.4byte	.LFE9-.LFB9
 2382 0060 00000000 		.4byte	.LFB10
 2383 0064 18000000 		.4byte	.LFE10-.LFB10
 2384 0068 00000000 		.4byte	.LFB11
 2385 006c 10000000 		.4byte	.LFE11-.LFB11
 2386 0070 00000000 		.4byte	.LFB12
 2387 0074 10000000 		.4byte	.LFE12-.LFB12
 2388 0078 00000000 		.4byte	.LFB13
 2389 007c 1C000000 		.4byte	.LFE13-.LFB13
 2390 0080 00000000 		.4byte	.LFB14
 2391 0084 1C000000 		.4byte	.LFE14-.LFB14
 2392 0088 00000000 		.4byte	.LFB15
 2393 008c 5C000000 		.4byte	.LFE15-.LFB15
 2394 0090 00000000 		.4byte	.LFB16
 2395 0094 40000000 		.4byte	.LFE16-.LFB16
 2396 0098 00000000 		.4byte	.LFB17
 2397 009c 48000000 		.4byte	.LFE17-.LFB17
 2398 00a0 00000000 		.4byte	0
 2399 00a4 00000000 		.4byte	0
 2400              		.section	.debug_ranges,"",%progbits
 2401              	.Ldebug_ranges0:
 2402 0000 00000000 		.4byte	.LFB1
 2403 0004 FC000000 		.4byte	.LFE1
 2404 0008 00000000 		.4byte	.LFB2
 2405 000c 24000000 		.4byte	.LFE2
 2406 0010 00000000 		.4byte	.LFB0
 2407 0014 20000000 		.4byte	.LFE0
 2408 0018 00000000 		.4byte	.LFB3
 2409 001c 10000000 		.4byte	.LFE3
 2410 0020 00000000 		.4byte	.LFB4
 2411 0024 14000000 		.4byte	.LFE4
 2412 0028 00000000 		.4byte	.LFB5
 2413 002c 14000000 		.4byte	.LFE5
 2414 0030 00000000 		.4byte	.LFB6
 2415 0034 28000000 		.4byte	.LFE6
 2416 0038 00000000 		.4byte	.LFB7
 2417 003c 2C000000 		.4byte	.LFE7
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 59


 2418 0040 00000000 		.4byte	.LFB8
 2419 0044 10000000 		.4byte	.LFE8
 2420 0048 00000000 		.4byte	.LFB9
 2421 004c 1C000000 		.4byte	.LFE9
 2422 0050 00000000 		.4byte	.LFB10
 2423 0054 18000000 		.4byte	.LFE10
 2424 0058 00000000 		.4byte	.LFB11
 2425 005c 10000000 		.4byte	.LFE11
 2426 0060 00000000 		.4byte	.LFB12
 2427 0064 10000000 		.4byte	.LFE12
 2428 0068 00000000 		.4byte	.LFB13
 2429 006c 1C000000 		.4byte	.LFE13
 2430 0070 00000000 		.4byte	.LFB14
 2431 0074 1C000000 		.4byte	.LFE14
 2432 0078 00000000 		.4byte	.LFB15
 2433 007c 5C000000 		.4byte	.LFE15
 2434 0080 00000000 		.4byte	.LFB16
 2435 0084 40000000 		.4byte	.LFE16
 2436 0088 00000000 		.4byte	.LFB17
 2437 008c 48000000 		.4byte	.LFE17
 2438 0090 00000000 		.4byte	0
 2439 0094 00000000 		.4byte	0
 2440              		.section	.debug_line,"",%progbits
 2441              	.Ldebug_line0:
 2442 0000 7D020000 		.section	.debug_str,"MS",%progbits,1
 2442      02005500 
 2442      00000201 
 2442      FB0E0D00 
 2442      01010101 
 2443              	.LASF57:
 2444 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2444      5341525F 
 2444      5365715F 
 2444      315F6F66 
 2444      66736574 
 2445              	.LASF10:
 2446 0015 75696E74 		.ascii	"uint16\000"
 2446      313600
 2447              	.LASF25:
 2448 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2448      5341525F 
 2448      5365715F 
 2448      315F496E 
 2448      697400
 2449              	.LASF48:
 2450 002f 61646347 		.ascii	"adcGain\000"
 2450      61696E00 
 2451              	.LASF24:
 2452 0037 636F756E 		.ascii	"counts\000"
 2452      747300
 2453              	.LASF29:
 2454 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2454      5341525F 
 2454      5365715F 
 2454      315F5374 
 2454      61727443 
 2455              	.LASF44:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 60


 2456 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2456      5341525F 
 2456      5365715F 
 2456      315F5365 
 2456      74536174 
 2457              	.LASF63:
 2458 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2458      43313120 
 2458      352E342E 
 2458      31203230 
 2458      31363036 
 2459 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2459      20726576 
 2459      6973696F 
 2459      6E203233 
 2459      37373135 
 2460 00d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2460      66756E63 
 2460      74696F6E 
 2460      2D736563 
 2460      74696F6E 
 2461              	.LASF27:
 2462 0100 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2462      5341525F 
 2462      5365715F 
 2462      315F5374 
 2462      61727400 
 2463              	.LASF7:
 2464 0114 6C6F6E67 		.ascii	"long long unsigned int\000"
 2464      206C6F6E 
 2464      6720756E 
 2464      7369676E 
 2464      65642069 
 2465              	.LASF26:
 2466 012b 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2466      5341525F 
 2466      5365715F 
 2466      315F456E 
 2466      61626C65 
 2467              	.LASF33:
 2468 0140 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2468      5341525F 
 2468      5365715F 
 2468      315F4765 
 2468      74526573 
 2469              	.LASF6:
 2470 015a 6C6F6E67 		.ascii	"long long int\000"
 2470      206C6F6E 
 2470      6720696E 
 2470      7400
 2471              	.LASF0:
 2472 0168 7369676E 		.ascii	"signed char\000"
 2472      65642063 
 2472      68617200 
 2473              	.LASF41:
 2474 0174 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2474      5341525F 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 61


 2474      5365715F 
 2474      315F5365 
 2474      74486967 
 2475              	.LASF13:
 2476 018f 696E7433 		.ascii	"int32\000"
 2476      3200
 2477              	.LASF52:
 2478 0195 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2478      5341525F 
 2478      5365715F 
 2478      315F436F 
 2478      756E7473 
 2479              	.LASF4:
 2480 01b3 6C6F6E67 		.ascii	"long int\000"
 2480      20696E74 
 2480      00
 2481              	.LASF65:
 2482 01bc 453A5C52 		.ascii	"E:\\Research\\illumina\\PSoC\\Layout 2_14\\Version "
 2482      65736561 
 2482      7263685C 
 2482      696C6C75 
 2482      6D696E61 
 2483 01ea 325C536C 		.ascii	"2\\Slave-Test\\Design01.cydsn\000"
 2483      6176652D 
 2483      54657374 
 2483      5C446573 
 2483      69676E30 
 2484              	.LASF9:
 2485 0206 75696E74 		.ascii	"uint8\000"
 2485      3800
 2486              	.LASF61:
 2487 020c 43794465 		.ascii	"CyDelayUs\000"
 2487      6C617955 
 2487      7300
 2488              	.LASF16:
 2489 0216 646F7562 		.ascii	"double\000"
 2489      6C6500
 2490              	.LASF11:
 2491 021d 75696E74 		.ascii	"uint32\000"
 2491      333200
 2492              	.LASF38:
 2493 0224 6D61736B 		.ascii	"mask\000"
 2493      00
 2494              	.LASF49:
 2495 0229 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2495      5341525F 
 2495      5365715F 
 2495      315F436F 
 2495      756E7473 
 2496              	.LASF34:
 2497 0247 7265744D 		.ascii	"retMode\000"
 2497      6F646500 
 2498              	.LASF56:
 2499 024f 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2499      5341525F 
 2499      5365715F 
 2499      315F696E 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 62


 2499      69745661 
 2500              	.LASF8:
 2501 0265 756E7369 		.ascii	"unsigned int\000"
 2501      676E6564 
 2501      20696E74 
 2501      00
 2502              	.LASF66:
 2503 0272 75566F6C 		.ascii	"uVolts\000"
 2503      747300
 2504              	.LASF5:
 2505 0279 6C6F6E67 		.ascii	"long unsigned int\000"
 2505      20756E73 
 2505      69676E65 
 2505      6420696E 
 2505      7400
 2506              	.LASF54:
 2507 028b 766F6C74 		.ascii	"volts\000"
 2507      7300
 2508              	.LASF23:
 2509 0291 746D7052 		.ascii	"tmpRegVal\000"
 2509      65675661 
 2509      6C00
 2510              	.LASF3:
 2511 029b 73686F72 		.ascii	"short unsigned int\000"
 2511      7420756E 
 2511      7369676E 
 2511      65642069 
 2511      6E7400
 2512              	.LASF60:
 2513 02ae 4379496E 		.ascii	"CyIntSetVector\000"
 2513      74536574 
 2513      56656374 
 2513      6F7200
 2514              	.LASF55:
 2515 02bd 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2515      5341525F 
 2515      5365715F 
 2515      315F6368 
 2515      616E6E65 
 2516              	.LASF51:
 2517 02da 6D566F6C 		.ascii	"mVolts\000"
 2517      747300
 2518              	.LASF19:
 2519 02e1 72656733 		.ascii	"reg32\000"
 2519      3200
 2520              	.LASF14:
 2521 02e7 666C6F61 		.ascii	"float32\000"
 2521      74333200 
 2522              	.LASF21:
 2523 02ef 73697A65 		.ascii	"sizetype\000"
 2523      74797065 
 2523      00
 2524              	.LASF40:
 2525 02f8 6C6F774C 		.ascii	"lowLimit\000"
 2525      696D6974 
 2525      00
 2526              	.LASF20:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 63


 2527 0301 6C6F6E67 		.ascii	"long double\000"
 2527      20646F75 
 2527      626C6500 
 2528              	.LASF32:
 2529 030d 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2529      5341525F 
 2529      5365715F 
 2529      315F4973 
 2529      456E6443 
 2530              	.LASF30:
 2531 032b 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2531      5341525F 
 2531      5365715F 
 2531      315F5374 
 2531      6F70436F 
 2532              	.LASF17:
 2533 0345 696E7436 		.ascii	"int64\000"
 2533      3400
 2534              	.LASF59:
 2535 034b 4379496E 		.ascii	"CyIntSetPriority\000"
 2535      74536574 
 2535      5072696F 
 2535      72697479 
 2535      00
 2536              	.LASF64:
 2537 035c 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2537      72617465 
 2537      645F536F 
 2537      75726365 
 2537      5C50536F 
 2538              	.LASF15:
 2539 0383 666C6F61 		.ascii	"float\000"
 2539      7400
 2540              	.LASF47:
 2541 0389 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2541      5341525F 
 2541      5365715F 
 2541      315F5365 
 2541      74476169 
 2542              	.LASF28:
 2543 039f 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2543      5341525F 
 2543      5365715F 
 2543      315F5374 
 2543      6F7000
 2544              	.LASF42:
 2545 03b2 68696768 		.ascii	"highLimit\000"
 2545      4C696D69 
 2545      7400
 2546              	.LASF62:
 2547 03bc 43794861 		.ascii	"CyHalt\000"
 2547      6C7400
 2548              	.LASF1:
 2549 03c3 756E7369 		.ascii	"unsigned char\000"
 2549      676E6564 
 2549      20636861 
 2549      7200
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 64


 2550              	.LASF2:
 2551 03d1 73686F72 		.ascii	"short int\000"
 2551      7420696E 
 2551      7400
 2552              	.LASF53:
 2553 03db 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2553      5341525F 
 2553      5365715F 
 2553      315F436F 
 2553      756E7473 
 2554              	.LASF37:
 2555 03f8 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2555      5341525F 
 2555      5365715F 
 2555      315F5365 
 2555      74436861 
 2556              	.LASF22:
 2557 0412 63684E75 		.ascii	"chNum\000"
 2557      6D00
 2558              	.LASF35:
 2559 0418 6368616E 		.ascii	"chan\000"
 2559      00
 2560              	.LASF18:
 2561 041d 63686172 		.ascii	"char\000"
 2561      00
 2562              	.LASF39:
 2563 0422 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2563      5341525F 
 2563      5365715F 
 2563      315F5365 
 2563      744C6F77 
 2564              	.LASF46:
 2565 043c 6F666673 		.ascii	"offset\000"
 2565      657400
 2566              	.LASF50:
 2567 0443 61646343 		.ascii	"adcCounts\000"
 2567      6F756E74 
 2567      7300
 2568              	.LASF58:
 2569 044d 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2569      5341525F 
 2569      5365715F 
 2569      315F636F 
 2569      756E7473 
 2570              	.LASF31:
 2571 046b 73746174 		.ascii	"status\000"
 2571      757300
 2572              	.LASF45:
 2573 0472 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2573      5341525F 
 2573      5365715F 
 2573      315F5365 
 2573      744F6666 
 2574              	.LASF12:
 2575 048a 696E7431 		.ascii	"int16\000"
 2575      3600
 2576              	.LASF43:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\ccEpfsJz.s 			page 65


 2577 0490 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2577      5341525F 
 2577      5365715F 
 2577      315F5365 
 2577      744C696D 
 2578              	.LASF36:
 2579 04ab 72657375 		.ascii	"result\000"
 2579      6C7400
 2580              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
