import numpy as np
from matplotlib import pyplot as plt



# data1 collected with 1 MOhm resistor across Vgs and TIA with reference of 2 V
# current1 = -1e-6/20e3*np.array([39006,38616,38131,37937,37442,37287,36895,36664,36181,35889,35752,35187,34887,34885,34330,34043,33572,33421,33044,32774,32254,32298,31924,31319,31070,30971,30281,30104,29912,29480,29355,28872,28482,28250,27746,27637,27263,26921,26761,26458,26009,26020,25327,24997,24598,24371,24267,24016,23721,23406,22855,22606,22200,21943,21578,21351,21004,20874,20293,19868,19874,19443,19184,18943,18357,18302,18023,17633,17247,16967,16412,16403,16137,15615,15313,15193,15006,14386,14135,13951,13321,13218,12702,12812,12306,11919,11812,11186,11013,10673,10178,9998,9543,9564,9323,9036,8360,8128,7810,7541,7306,6958,6706,6428,6015,5760,5612,5124,4778,4782,4281,3884,3388,3300,2814,2595,2243,2119,1626,1468,1269,712,284,336,-184,-356,-442,-1181,-1227,-1679,-2172,-2269,-2707,-2699,-3299,-3317,-3828,-4199,-4668,-4943,-4976,-5535,-5504,-5826,-6190,-6725,-7098,-7127,-7712,-7926,-8132,-8584,-8981,-9168,-9464,-9657,-9999,-10118,-10559,-10869,-11108,-11475,-11931,-12267,-12635,-12873,-13308,-13595,-13705,-14068,-14379,-14723,-14979,-15001,-15690,-15967,-16170,-16579,-16861,-17310,-17671,-17581,-18154,-18425,-18653,-19233,-19306,-19825,-19855,-20330,-20533,-20927,-21138,-21512,-21825,-22225,-22486,-22783,-23084,-23371,-23537,-24231,-24139,-24620,-24430,-25016,-25643,-25583,-26061,-26175,-26607,-27252,-27460,-27596,-27893,-28293,-28566,-28932,-29142,-29270,-29688,-30355,-30374,-30734,-30995,-31221,-31693,-31752,-32165,-32393,-33037,-33346,-33120,-33864,-33841,-34326,-34516,-35107,-35203,-35735,-35716,-36167,-36477,-37051,-37240,-37564,-37724,-38167,-38256,-38648,-39289,-39296,-39492,-39827,-40385,-40352])
# voltage1 = np.linspace(-2,2,len(current1))

# plt.plot(voltage1, current1)
# plt.gca().get_yaxis().get_major_formatter().set_powerlimits((0, 0))
# plt.xlabel('Voltage Across Resistor [V]')
# plt.ylabel('Current Through Resistor [A]')
# plt.show()

# current2 = -1e-6/20e3*np.array([84114,84559,86087,85988,85170,85219,85835,84943,84624,82960,83723,83906,84327,84524,85463,86423,86550,85418,85105,83864,86310,85936,85237,86034,85636,85029,84724,85056,84629,83797,84167,84924,85065,88680,88517,86953,86638,86763,87863,86876,86869,88310,86889,86619,86680,87086,86911,87324,88242,88210,87320,86841,87070,87658,87321,87515,87318,87136,84594,83915,86587,86203,86163,85942,86112,84334,83173,83475,82095,84888,86589,87072,86707,86751,86391,87100,86524,87304,87240,86389,86234,85464,86269,85525,86716,84892,84436,84510,87031,86671,86742,87116,86272,86326,86616,85370,85199,84928,85266,84871,84653,84497,83359,84386,84465,84576,84403,85937,86413,85410,85393,84597,85678,84027,84235,82319,81709,82168,81949,82180,81794,82420,81334,81297,81531,81360,80609,81195,81619,81769,81401,82467,81946,82093,81838,81900,81536,79961,79307,78995,79965,80153,79573,80494,80432,79056,80647,80446,81064,81751,82252,80197,79944,79839,79701,80416,81125,81221,79974,79076,76384,76184,76552,77361,77022,77213,78481,78701,78710,79358,78798,78093,78200,77663,77083,77324,78710,78817,78323,77238,77015,77320,77342,78265,79464,80990,81185,78778,77208,79502,79298,78497,79001,78624,79167,77648,77908,78010,77588,79321,79452,77797,78159,77891,77955,78035,78236,78169,76778,77948,77949,78039,78125,77282,77735,77941,78623,78057,78233,79488,79539,78650,78968,80359,79894,80432,79865,79943,79022,78384,80091,80204,80462,80752,78586,78577,77393,78116,78754,79217,78846,78334,76652,77683,77751,76605,76168,76564,77517,77378,79019,78568,78161,77986,77607,78490])
# current3 = -1e-6/20e3*np.array([90517,89240,88649,88412,88228,88623,88934,88690,88086,89208,89236,89827,90499,89609,89501,88310,89054,88686,89190,89191,89489,88677,87926,87833,88605,87721,88076,87238,87188,87037,87326,86671,86692,87250,87717,89178,88969,88858,89571,89475,87934,88300,88631,87892,88315,88217,89186,89088,88981,89413,88296,87379,87702,87394,88317,88474,87006,86516,86489,86231,86023,83314,84337,86215,86948,88089,88872,89425,88592,87834,87984,88554,87646,88030,88497,88322,88889,89043,87442,86728,86526,86395,87737,87669,87939,87471,86077,85619,85401,86649,86882,85778,87535,86000,86749,86882,86338,87415,87517,87131,87633,86559,87213,86809,86355,86650,85758,86423,86195,84470,85239,85759,85342,86077,86562,85126,84880,85769,84589,85848,85463,85867,85551,85407,85111,84858,85891,85680,86003,85925,84893,86055,86148,86729,87074,87232,86326,86723,82522,81867,82155,82086,81608,84591,85535,85441,84660,85391,85542,86066,86825,86487,87355,87229,85400,85862,86653,87112,87915,87482,86667,86340,86846,86750,85924,85923,85548,86604,86252,87194,86530,85339,84621,84369,85323,84791,84226,83910,85267,85238,85107,84238,84260,83748,85167,84829,83614,83755,83857,83571,83495,81897,80545,80774,80543,79951,80112,80401,79977,80082,79041,79004,79011,79106,82900,84268,84605,84936,84254,83426,83544,83305,83176,83176,82997,83366,82960,82127,82191,82988,82551,82590,83491,83533,82460,81996,81612,81747,82327,83245,82616,83667,83965,83749,83238,81977,81539,82146,83043,83111,82629,82082,82817,81497,81359,81929,81787,81113,81410,81777,80827,80811,80267,80697,80657,79774])
# current4 = -1e-6/20e3*np.array([92504,90953,90214,90678,91098,90342,89972,83356,86747,90860,91294,89911,89982,89632,90862,89990,89925,90765,91274,86896,86518,86016,84031,83084,81757,81669,82954,79991,79515,80301,79493,81537,83908,84463,84868,81746,81787,81849,82122,85044,86063,86924,86621,84604,83067,83059,84476,84226,84208,83970,84044,83914,84136,84914,83742,83254,83311,84297,84249,83509,83018,83504,83666,83736,83042,84330,84652,83100,84023,84180,84431,82412,82074,82128,82454,82735,83389,83070,82447,81763,81663,82039,82448,82091,82427,82826,82821,82877,81592,81844,81623,82108,82554,83225,83173,82011,82061,82379,81661,82039,82794,81956,83058,83363,82933,82345,83584,83094,83193,83253,82064,82602,83393,83747,83624,83292,82524,82620,82553,82476,83212,82150,81555,82460,81674,81212,81473,81805,81872,81874,81628,81672,81838,81760,81653,80340,80613,80772,81613,81823,81643,81424,81240,81232,81932,82246,80741,80742,81276,81410,83247,81520,81496,81243,80762,81445,81950,82604,81980,82000,82952,82289,84204,84023,83323,82626,83087,81331,80153,80338,80442,79983,79616,79847,81173,81581,81544,80777,80729,80374,79969,81166,80850,79900,81217,81093,80615,80877,80460,79635,80114,79637,79741,80679,81496,81097,81254,80486,79528,79461,79491,79417,79221,79815,79416,79481,79495,80703,81092,81215,80754,80721,79977,79494,80468,80353,80270,79504,79828,79829,80351,78003,78598,79353,79929,79187,77499,77553,79278,79161,79423,79142,78802,78624,78838,79226,80099,79168,75001,75391,75160,75298,74850,74739,75013,75223,74936,75126,74516,73896,75174,77372,77703,77966,78283,78103])
# # current4 = -1e-6/20e3*np.array([])
# # current4 = -1e-6/20e3*np.array([])
# # current4 = -1e-6/20e3*np.array([])
# # current4 = -1e-6/20e3*np.array([])
# voltage2 = np.linspace(-2,2,len(current2))

# plt.plot(voltage2, -current2)
# plt.plot(voltage2, -current3)
# plt.plot(voltage2, -current4)
# plt.gca().get_yaxis().get_major_formatter().set_powerlimits((0, 0))
# plt.xlabel('Gate Voltage on Device [V]')
# plt.ylabel('-Current Through Device [A]')
# plt.show()


# Collected with a 10 MOhm resistor across Vgs and TIA with reference of 2 V
current5 = -1e-6/20e3*np.array([2988,2947,2901,2960,2923,2856,2786,2800,2759,2683,2670,2625,2593,2585,2615,2526,2501,2463,2361,2404,2360,2318,2277,2280,2241,2168,2124,2125,2093,2028,2055,1980,1994,1951,1889,1900,1852,1771,1767,1725,1681,1672,1605,1596,1589,1547,1532,1489,1458,1371,1397,1353,1281,1304,1224,1214,1174,1139,1123,1132,1094,977,970,967,939,889,840,851,809,786,714,734,640,670,636,568,564,533,505,482,441,406,332,341,265,230,191,196,178,99,106,67,41,73,-31,-3,-62,-114,-122,-112,-165,-225,-234,-303,-348,-313,-363,-355,-469,-470,-504,-530,-541,-615,-657,-700,-681,-672,-680,-755,-784,-780,-859,-874,-902,-943,-1008,-1034,-1055,-1064,-1118,-1087,-1126,-1180,-1236,-1248,-1312,-1341,-1352,-1391,-1386,-1424,-1464,-1537,-1501,-1587,-1615,-1597,-1710,-1656,-1719,-1790,-1801,-1837,-1838,-1890,-1923,-1922,-2002,-2040,-2053,-2108,-2099,-2173,-2196,-2191,-2269,-2304,-2327,-2355,-2416,-2421,-2406,-2484,-2521,-2555,-2576,-2626,-2620,-2657,-2724,-2695,-2727,-2811,-2804,-2854,-2873,-2937,-2946,-2994,-3037,-3026,-3046,-3125,-3162,-3166,-3247,-3201,-3278,-3292,-3298,-3330,-3369,-3450,-3394,-3465,-3522,-3532,-3568,-3595,-3588,-3681,-3657,-3722,-3725,-3753,-3838,-3837,-3837,-3953,-3988,-3973,-4007,-4042,-4079,-4084,-4107,-4158,-4175,-4158,-4252,-4219,-4287,-4342,-4355,-4409,-4442,-4432,-4496,-4527,-4527,-4579,-4636,-4628,-4685,-4733,-4738,-4752,-4770,-4848,-4895,-4909,-4920,-4966,-5011,-5049])
current6 = -1e-6/20e3*np.array([-638,-605,-623,-636,-620,-619,-675,-633,-606,-623,-633,-653,-644,-693,-642,-629,-663,-671,-654,-691,-676,-656,-670,-655,-657,-707,-713,-717,-706,-700,-693,-697,-702,-730,-713,-761,-730,-741,-755,-693,-714,-719,-782,-759,-755,-754,-779,-764,-787,-775,-782,-762,-785,-787,-767,-782,-785,-773,-781,-803,-836,-844,-815,-799,-778,-823,-816,-842,-833,-836,-835,-868,-864,-850,-856,-863,-845,-830,-833,-852,-866,-885,-845,-825,-883,-909,-837,-894,-877,-921,-951,-882,-957,-963,-928,-905,-880,-877,-912,-924,-927,-908,-925,-965,-935,-937,-970,-926,-950,-955,-948,-990,-983,-965,-953,-980,-971,-959,-961,-993,-974,-1019,-984,-987,-1006,-1027,-1044,-1018,-1042,-1006,-1035,-997,-1065,-1014,-1035,-998,-1030,-1002,-1054,-1062,-1041,-1062,-1078,-1017,-1036,-1063,-1085,-1079,-1064,-1054,-1088,-1085,-1070,-1085,-1124,-1125,-1062,-1114,-1109,-1063,-1083,-1035,-1121,-1140,-1075,-1145,-1084,-1092,-1096,-1157,-1131,-1133,-1173,-1171,-1173,-1156,-1143,-1177,-1153,-1191,-1151,-1179,-1179,-1195,-1156,-1185,-1136,-1187,-1194,-1204,-1197,-1188,-1254,-1209,-1240,-1243,-1225,-1199,-1224,-1214,-1270,-1236,-1220,-1203,-1230,-1190,-1254,-1238,-1243,-1213,-1247,-1225,-1272,-1253,-1219,-1294,-1305,-1258,-1316,-1291,-1270,-1294,-1295,-1284,-1328,-1351,-1357,-1312,-1320,-1322,-1332,-1339,-1345,-1359,-1341,-1390,-1302,-1341,-1323,-1346,-1353,-1384,-1334,-1404,-1339,-1375,-1348,-1358,-1367,-1378,-1392,-1366,-1419,-1385,-1393,-1401])
current7 = -1e-6/20e3*np.array([-972,-971,-972,-984,-1004,-992,-966,-940,-945,-987,-990,-993,-938,-934,-964,-988,-953,-982,-1001,-1015,-974,-969,-956,-981,-1000,-945,-1006,-963,-976,-1039,-947,-979,-996,-1016,-977,-945,-971,-989,-971,-956,-944,-972,-997,-988,-971,-987,-935,-977,-1016,-975,-981,-1000,-971,-1008,-1043,-991,-973,-974,-981,-974,-989,-1007,-966,-968,-1012,-994,-1000,-964,-1004,-1007,-954,-1048,-988,-995,-949,-982,-952,-1007,-961,-960,-960,-991,-1035,-990,-1030,-973,-969,-963,-996,-954,-988,-990,-1014,-988,-957,-956,-1026,-1001,-973,-973,-947,-996,-1002,-1017,-1016,-983,-1022,-1001,-995,-968,-978,-1003,-996,-1006,-990,-989,-1021,-973,-983,-1019,-958,-972,-1005,-1005,-1006,-1008,-995,-967,-1000,-967,-995,-994,-972,-992,-1006,-1032,-1017,-982,-994,-994,-1000,-989,-939,-1015,-980,-992,-984,-969,-1008,-986,-1000,-1002,-978,-987,-997,-989,-992,-1008,-1016,-1032,-1028,-994,-1029,-994,-1054,-991,-1026,-1025,-1068,-978,-976,-1032,-1027,-1007,-999,-1037,-994,-971,-1032,-1005,-982,-1017,-1004,-986,-1025,-1021,-1056,-1000,-1003,-1046,-979,-1022,-1053,-1027,-1046,-1022,-1010,-1046,-1070,-1066,-988,-1038,-1005,-975,-1004,-1053,-1020,-995,-1017,-1000,-1022,-1023,-1037,-1030,-1016,-993,-975,-988,-1057,-1017,-994,-1003,-1030,-975,-1022,-1025,-1040,-1081,-1030,-999,-1032,-1052,-1042,-1017,-993,-1008,-1070,-1022,-1035,-1040,-1056,-1044,-1001,-1031,-1034,-1042,-999,-1062,-1035,-1036,-1019,-960,-1029,-996,-1010,-1019])
current8 = -1e-6/20e3*np.array([-941,-930,-955,-942,-934,-930,-922,-944,-967,-944,-937,-937,-942,-964,-930,-963,-917,-979,-987,-987,-963,-947,-936,-930,-925,-942,-949,-937,-968,-971,-958,-956,-988,-958,-925,-943,-967,-971,-940,-964,-974,-974,-902,-955,-912,-944,-921,-929,-995,-978,-973,-994,-953,-972,-1006,-979,-956,-959,-968,-936,-997,-947,-979,-961,-997,-988,-962,-978,-999,-985,-971,-1013,-974,-976,-973,-966,-984,-1024,-997,-966,-972,-987,-998,-949,-972,-968,-986,-966,-959,-979,-952,-964,-1008,-1013,-992,-984,-954,-973,-994,-937,-971,-940,-985,-996,-998,-977,-946,-986,-970,-984,-962,-998,-957,-989,-965,-996,-963,-984,-975,-987,-983,-966,-983,-974,-1010,-967,-983,-954,-987,-986,-974,-1000,-965,-987,-939,-948,-1001,-968,-1013,-1026,-1004,-1011,-999,-985,-1044,-1033,-957,-966,-999,-976,-1030,-995,-996,-947,-1019,-997,-951,-987,-975,-1005,-959,-971,-987,-1014,-971,-1004,-1002,-972,-1004,-1001,-1000,-1009,-980,-990,-1019,-980,-967,-985,-1066,-1019,-984,-1031,-992,-1019,-980,-1005,-962,-1023,-973,-1024,-1058,-1007,-1031,-1038,-1012,-996,-997,-1016,-1038,-1014,-1027,-1006,-979,-1029,-1006,-973,-1030,-1013,-1049,-1014,-1009,-1027,-1005,-998,-1074,-1027,-1004,-1007,-1034,-1020,-981,-984,-1027,-1001,-1008,-1006,-988,-1046,-1046,-1050,-1024,-1021,-1018,-1019,-1036,-1027,-1015,-1044,-1057,-1039,-1064,-1039,-1005,-968,-1022,-1037,-1042,-991,-1052,-1058,-1002,-1034,-1050,-1021,-1024,-1028])
current9 = -1e-6/1e6*np.array([1001,1042,935,956,1017,1012,990,972,1083,914,954,898,973,845,895,863,905,810,785,798,696,796,756,701,699,710,692,637,629,625,690,508,597,552,446,443,462,512,486,384,413,381,422,307,412,390,269,317,275,344,242,318,210,285,232,232,253,265,60,288,122,160,52,7,86,61,110,23,-14,12,-31,-35,3,82,-31,-55,-45,-38,-66,-33,-208,-123,-154,-206,-205,-105,-148,-277,-293,-147,-282,-355,-293,-291,-307,-419,-427,-423,-406,-393,-302,-412,-450,-532,-603,-487,-434,-378,-456,-512,-593,-500,-579,-515,-582,-655,-612,-611,-635,-760,-686,-776,-883,-750,-786,-831,-754,-885,-827,-936,-942,-942,-853,-922,-938,-1071,-959,-1023,-896,-977,-950,-998,-1100,-1047,-1081,-1163,-1073,-1025,-1152,-1196,-1235,-1209,-1213,-1283,-1123,-1120,-1192,-1308,-1215,-1358,-1387,-1380,-1405,-1374,-1445,-1400,-1412,-1302,-1392,-1434,-1541,-1590,-1470,-1568,-1597,-1604,-1583,-1657,-1709,-1717,-1734,-1664,-1704,-1767,-1604,-1714,-1689,-1757,-1793,-1714,-1764,-1733,-1839,-1851,-1798,-1905,-1836,-1841,-1927,-1896,-1907,-2117,-1960,-1995,-1994,-2134,-2107,-1933,-2100,-2061,-2128,-1980,-2053,-2229,-2140,-2206,-2125,-2192,-2242,-2268,-2277,-2193,-2207,-2294,-2299,-2289,-2249,-2313,-2362,-2305,-2431,-2435,-2359,-2472,-2389,-2366,-2372,-2535,-2460,-2461,-2527,-2492,-2609,-2609,-2612,-2605,-2699,-2640,-2735,-2652,-2687,-2680,-2752,-2697,-2694,-2730])
current10 = -1e-6/1e6*np.array([950,950,868,979,1076,994,933,999,961,915,890,891,865,755,863,969,853,802,806,668,857,890,755,694,662,786,671,706,636,689,589,572,619,617,653,494,505,605,521,379,509,387,441,358,418,401,445,318,383,394,358,355,236,112,158,310,167,340,195,139,105,101,201,13,132,132,123,53,8,71,69,-96,0,1,-115,43,-48,-80,-122,-128,-76,-143,-60,-177,-258,-181,-135,-249,-356,-214,-273,-279,-271,-362,-288,-298,-257,-357,-357,-272,-448,-353,-428,-404,-527,-451,-608,-571,-574,-623,-481,-655,-578,-574,-545,-710,-668,-580,-687,-766,-729,-743,-772,-787,-708,-805,-841,-814,-960,-919,-869,-919,-972,-930,-890,-938,-1072,-999,-1058,-1029,-1050,-1006,-996,-1126,-911,-1096,-1096,-1177,-1172,-1106,-1080,-1140,-1203,-1247,-1223,-1227,-1377,-1194,-1285,-1284,-1339,-1378,-1349,-1341,-1367,-1361,-1458,-1488,-1429,-1435,-1476,-1500,-1578,-1472,-1422,-1541,-1621,-1630,-1549,-1580,-1617,-1729,-1606,-1736,-1687,-1680,-1613,-1837,-1764,-1899,-1803,-1795,-1781,-1801,-1874,-1792,-1750,-1941,-1955,-1905,-1881,-1877,-2024,-2059,-2015,-1977,-2016,-1955,-1948,-2120,-2025,-2095,-2125,-2064,-2153,-2200,-2137,-2209,-2183,-2210,-2296,-2306,-2266,-2144,-2228,-2363,-2303,-2375,-2411,-2320,-2203,-2461,-2484,-2501,-2465,-2391,-2469,-2439,-2450,-2453,-2551,-2580,-2525,-2664,-2608,-2562,-2521,-2713,-2661,-2604,-2755,-2743,-2701,-2752,-2738,-2835])
voltage2 = np.linspace(-2,2,len(current6))

linearfit9 = np.polyfit(voltage2, current9, 1)

plt.plot(voltage2, current9-np.mean(current9))
# plt.plot(voltage2, current9)
plt.plot([],[], label='RMS Noise = {:.2g} A'.format(np.sqrt(np.mean((current9 - linearfit9[1] - linearfit9[0]*voltage2)**2))), alpha=0)
# plt.plot(voltage2, current9)
# plt.plot(voltage2, current10)
plt.gca().get_yaxis().get_major_formatter().set_powerlimits((0, 0))
plt.xlabel('Voltage Across Resistor [V]')
plt.ylabel('Current Through Resistor [A]')
plt.title('PSoC Measurement of 1 G$\Omega$ Resistor')
plt.legend()
plt.show()



